{"ast":null,"code":"import axios from 'axios';\nimport authHeader from '../AuthHeader';\nconst API_URL = \"http://localhost:8080/answers/\";\n\nclass AnswerService {\n  getAnswers() {\n    return axios.get(API_URL + \"get-all-answers\", {\n      headers: authHeader()\n    }).then(response => {\n      console.log(response.data);\n      const data = response.data;\n\n      if (data.status) {\n        const answers = data.answer.answers;\n        return answers;\n      }\n\n      return [];\n    }).catch(error => {\n      console.log(error);\n      return [];\n    });\n  }\n\n  AddAnswer(data) {\n    return axios.post(API_URL + \"add-answer\", data, {\n      headers: authHeader()\n    }).then(response => {\n      const data = response.data;\n      return data.status;\n    }).catch(error => {\n      console.log(error);\n      return false;\n    });\n  }\n\n  MakeReport(data) {\n    return axios.post(API_URL + \"report\", data, {\n      headers: authHeader()\n    }).then(response => {\n      const data = response.data;\n      return data.status;\n    }).catch(error => {\n      console.log(error);\n      return false;\n    });\n  }\n\n}\n\nexport default new AnswerService();","map":{"version":3,"sources":["C:/Users/Кристина/Downloads/Telegram Desktop/psixCentr/main/src/redux/services/AnswerService.ts"],"names":["axios","authHeader","API_URL","AnswerService","getAnswers","get","headers","then","response","console","log","data","status","answers","answer","catch","error","AddAnswer","post","MakeReport"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,UAAP,MAAuB,eAAvB;AAMA,MAAMC,OAAO,GAAG,gCAAhB;;AAGA,MAAMC,aAAN,CAAoB;AACZC,EAAAA,UAAU,GAAE;AACR,WAAOJ,KAAK,CAACK,GAAN,CAAUH,OAAO,GAAG,iBAApB,EAAsC;AAACI,MAAAA,OAAO,EAACL,UAAU;AAAnB,KAAtC,EACNM,IADM,CACAC,QAAD,IAAc;AAChBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAArB;AACA,YAAMA,IAAY,GAAGH,QAAQ,CAACG,IAA9B;;AACA,UAAIA,IAAI,CAACC,MAAT,EAAgB;AACd,cAAMC,OAAsB,GAAGF,IAAI,CAACG,MAAL,CAAYD,OAA3C;AACA,eAAOA,OAAP;AACD;;AACD,aAAO,EAAP;AACD,KATI,EAUJE,KAVI,CAUGC,KAAD,IAAW;AAChBP,MAAAA,OAAO,CAACC,GAAR,CAAYM,KAAZ;AACA,aAAO,EAAP;AACD,KAbI,CAAP;AAcH;;AAEDC,EAAAA,SAAS,CAACN,IAAD,EAAiB;AACtB,WAAOX,KAAK,CAACkB,IAAN,CAAWhB,OAAO,GAAG,YAArB,EAAkCS,IAAlC,EAAuC;AAACL,MAAAA,OAAO,EAACL,UAAU;AAAnB,KAAvC,EACNM,IADM,CACAC,QAAD,IAAc;AAChB,YAAMG,IAAY,GAAGH,QAAQ,CAACG,IAA9B;AACE,aAAOA,IAAI,CAACC,MAAZ;AACH,KAJI,EAKJG,KALI,CAKGC,KAAD,IAAW;AAChBP,MAAAA,OAAO,CAACC,GAAR,CAAYM,KAAZ;AACA,aAAO,KAAP;AACD,KARI,CAAP;AASH;;AACDG,EAAAA,UAAU,CAACR,IAAD,EAAY;AAClB,WAAOX,KAAK,CAACkB,IAAN,CAAWhB,OAAO,GAAG,QAArB,EAA8BS,IAA9B,EAAmC;AAACL,MAAAA,OAAO,EAACL,UAAU;AAAnB,KAAnC,EACNM,IADM,CACAC,QAAD,IAAc;AAChB,YAAMG,IAAY,GAAGH,QAAQ,CAACG,IAA9B;AACE,aAAOA,IAAI,CAACC,MAAZ;AACH,KAJI,EAKJG,KALI,CAKGC,KAAD,IAAW;AAChBP,MAAAA,OAAO,CAACC,GAAR,CAAYM,KAAZ;AACA,aAAO,KAAP;AACD,KARI,CAAP;AASH;;AAvCW;;AAyCpB,eAAe,IAAIb,aAAJ,EAAf","sourcesContent":["import axios from 'axios';\r\nimport {Answer} from \"../../models/RequestModel\";\r\nimport authHeader from '../AuthHeader';\r\nimport {Appeal, PostAppeal} from \"../../models/AppealModel\";\r\nimport { TypeAppeal } from '../../models/TypeAppealModel';\r\nimport { AnswerModel,PostAnswer } from '../../models/AnswerModel';\r\nimport { Dates } from '../../models/DatesModel';\r\n\r\nconst API_URL = \"http://localhost:8080/answers/\";\r\n\r\n\r\nclass AnswerService {\r\n        getAnswers(){\r\n            return axios.get(API_URL + \"get-all-answers\",{headers:authHeader()})\r\n            .then((response) => {\r\n                console.log(response.data);\r\n                const data: Answer = response.data;\r\n                if (data.status){\r\n                  const answers: AnswerModel[] = data.answer.answers\r\n                  return answers;\r\n                }\r\n                return []\r\n              })\r\n              .catch((error) => {\r\n                console.log(error);\r\n                return []\r\n              });\r\n        }\r\n        \r\n        AddAnswer(data:PostAnswer){\r\n            return axios.post(API_URL + \"add-answer\",data,{headers:authHeader()})\r\n            .then((response) => {\r\n                const data: Answer = response.data;\r\n                  return data.status;\r\n              })\r\n              .catch((error) => {\r\n                console.log(error);\r\n                return false;\r\n              });\r\n        }\r\n        MakeReport(data:Dates){\r\n            return axios.post(API_URL + \"report\",data,{headers:authHeader()})\r\n            .then((response) => {\r\n                const data: Answer = response.data;\r\n                  return data.status;\r\n              })\r\n              .catch((error) => {\r\n                console.log(error);\r\n                return false;\r\n              });\r\n        }\r\n}\r\nexport default new AnswerService();"]},"metadata":{},"sourceType":"module"}