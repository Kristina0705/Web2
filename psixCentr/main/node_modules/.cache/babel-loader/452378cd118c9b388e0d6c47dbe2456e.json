{"ast":null,"code":"/*! typescript-cookie v1.0.3 | MIT */\nvar index = /*#__PURE__*/Object.freeze({\n  __proto__: null\n});\n\nconst encodeName = name => encodeURIComponent(name).replace(/%(2[346B]|5E|60|7C)/g, decodeURIComponent).replace(/[()]/g, escape);\n\nconst encodeValue = value => {\n  return encodeURIComponent(value).replace(/%(2[346BF]|3[AC-F]|40|5[BDE]|60|7[BCD])/g, decodeURIComponent);\n};\n\nconst decodeName = decodeURIComponent;\n\nconst decodeValue = value => {\n  if (value[0] === '\"') {\n    value = value.slice(1, -1);\n  }\n\n  return value.replace(/(%[\\dA-F]{2})+/gi, decodeURIComponent);\n};\n\nfunction stringifyAttributes(attributes) {\n  // Copy incoming attributes as to not alter the original object..\n  attributes = Object.assign({}, attributes);\n\n  if (typeof attributes.expires === 'number') {\n    attributes.expires = new Date(Date.now() + attributes.expires * 864e5);\n  }\n\n  if (attributes.expires != null) {\n    attributes.expires = attributes.expires.toUTCString();\n  }\n\n  return Object.entries(attributes).filter(_ref => {\n    let [key, value] = _ref;\n    return value != null && value !== false;\n  }) // Considers RFC 6265 section 5.2:\n  // ...\n  // 3.  If the remaining unparsed-attributes contains a %x3B (\";\")\n  //     character:\n  // Consume the characters of the unparsed-attributes up to,\n  // not including, the first %x3B (\";\") character.\n  // ...\n  .map(_ref2 => {\n    let [key, value] = _ref2;\n    return value === true ? `; ${key}` : `; ${key}=${value.split(';')[0]}`;\n  }).join('');\n}\n\nfunction get(name, decodeValue, decodeName) {\n  const scan = /(?:^|; )([^=]*)=([^;]*)/g;\n  const jar = {};\n  let match;\n\n  while ((match = scan.exec(document.cookie)) != null) {\n    try {\n      const found = decodeName(match[1]);\n      jar[found] = decodeValue(match[2], found);\n\n      if (name === found) {\n        break;\n      }\n    } catch (e) {}\n  }\n\n  return name != null ? jar[name] : jar;\n}\n\nconst DEFAULT_CODEC = Object.freeze({\n  decodeName: decodeName,\n  decodeValue: decodeValue,\n  encodeName: encodeName,\n  encodeValue: encodeValue\n});\nconst DEFAULT_ATTRIBUTES = Object.freeze({\n  path: '/'\n});\n\nfunction setCookie(name, value) {\n  let attributes = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : DEFAULT_ATTRIBUTES;\n  let {\n    encodeValue: encodeValue$1 = encodeValue,\n    encodeName: encodeName$1 = encodeName\n  } = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  return document.cookie = `${encodeName$1(name)}=${encodeValue$1(value, name)}${stringifyAttributes(attributes)}`;\n}\n\nfunction getCookie(name) {\n  let {\n    decodeValue: decodeValue$1 = decodeValue,\n    decodeName: decodeName$1 = decodeName\n  } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return get(name, decodeValue$1, decodeName$1);\n}\n\nfunction getCookies() {\n  let {\n    decodeValue: decodeValue$1 = decodeValue,\n    decodeName: decodeName$1 = decodeName\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  return get(undefined, decodeValue$1, decodeName$1);\n}\n\nfunction removeCookie(name) {\n  let attributes = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : DEFAULT_ATTRIBUTES;\n  setCookie(name, '', Object.assign({}, attributes, {\n    expires: -1\n  }));\n}\n\nfunction init(converter, defaultAttributes) {\n  const api = {\n    set: function (name, value, attributes) {\n      return setCookie(name, value, Object.assign({}, this.attributes, attributes), {\n        encodeValue: this.converter.write\n      });\n    },\n    get: function (name) {\n      if (arguments.length === 0) {\n        return getCookies(this.converter.read);\n      }\n\n      if (name == null) {\n        return;\n      }\n\n      return getCookie(name, this.converter.read);\n    },\n    remove: function (name, attributes) {\n      removeCookie(name, Object.assign({}, this.attributes, attributes));\n    },\n    withAttributes: function (attributes) {\n      return init(this.converter, Object.assign({}, this.attributes, attributes));\n    },\n    withConverter: function (converter) {\n      return init(Object.assign({}, this.converter, converter), this.attributes);\n    }\n  };\n  const config = {\n    attributes: {\n      value: Object.freeze(defaultAttributes)\n    },\n    converter: {\n      value: Object.freeze(converter)\n    }\n  };\n  return Object.create(api, config);\n}\n\nvar compat = init({\n  read: DEFAULT_CODEC.decodeValue,\n  write: DEFAULT_CODEC.encodeValue\n}, DEFAULT_ATTRIBUTES);\nexport { compat as Cookies, DEFAULT_ATTRIBUTES, DEFAULT_CODEC, index as Types, getCookie, getCookies, removeCookie, setCookie };","map":{"version":3,"sources":["C:/Users/Кристина/Downloads/Telegram Desktop/psixCentr/main/node_modules/typescript-cookie/dist/typescript-cookie.mjs"],"names":["index","Object","freeze","__proto__","encodeName","name","encodeURIComponent","replace","decodeURIComponent","escape","encodeValue","value","decodeName","decodeValue","slice","stringifyAttributes","attributes","assign","expires","Date","now","toUTCString","entries","filter","key","map","split","join","get","scan","jar","match","exec","document","cookie","found","e","DEFAULT_CODEC","DEFAULT_ATTRIBUTES","path","setCookie","encodeValue$1","encodeName$1","getCookie","decodeValue$1","decodeName$1","getCookies","undefined","removeCookie","init","converter","defaultAttributes","api","set","write","arguments","length","read","remove","withAttributes","withConverter","config","create","compat","Cookies","Types"],"mappings":"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","sourcesContent":["/*! typescript-cookie v1.0.3 | MIT */\nvar index = /*#__PURE__*/Object.freeze({\n    __proto__: null\n});\n\nconst encodeName = (name) => encodeURIComponent(name)\n    .replace(/%(2[346B]|5E|60|7C)/g, decodeURIComponent)\n    .replace(/[()]/g, escape);\nconst encodeValue = (value) => {\n    return encodeURIComponent(value).replace(/%(2[346BF]|3[AC-F]|40|5[BDE]|60|7[BCD])/g, decodeURIComponent);\n};\nconst decodeName = decodeURIComponent;\nconst decodeValue = (value) => {\n    if (value[0] === '\"') {\n        value = value.slice(1, -1);\n    }\n    return value.replace(/(%[\\dA-F]{2})+/gi, decodeURIComponent);\n};\n\nfunction stringifyAttributes(attributes) {\n    // Copy incoming attributes as to not alter the original object..\n    attributes = Object.assign({}, attributes);\n    if (typeof attributes.expires === 'number') {\n        attributes.expires = new Date(Date.now() + attributes.expires * 864e5);\n    }\n    if (attributes.expires != null) {\n        attributes.expires = attributes.expires.toUTCString();\n    }\n    return (Object.entries(attributes)\n        .filter(([key, value]) => value != null && value !== false)\n        // Considers RFC 6265 section 5.2:\n        // ...\n        // 3.  If the remaining unparsed-attributes contains a %x3B (\";\")\n        //     character:\n        // Consume the characters of the unparsed-attributes up to,\n        // not including, the first %x3B (\";\") character.\n        // ...\n        .map(([key, value]) => value === true ? `; ${key}` : `; ${key}=${value.split(';')[0]}`)\n        .join(''));\n}\nfunction get(name, decodeValue, decodeName) {\n    const scan = /(?:^|; )([^=]*)=([^;]*)/g;\n    const jar = {};\n    let match;\n    while ((match = scan.exec(document.cookie)) != null) {\n        try {\n            const found = decodeName(match[1]);\n            jar[found] = decodeValue(match[2], found);\n            if (name === found) {\n                break;\n            }\n        }\n        catch (e) { }\n    }\n    return name != null ? jar[name] : jar;\n}\nconst DEFAULT_CODEC = Object.freeze({\n    decodeName: decodeName,\n    decodeValue: decodeValue,\n    encodeName: encodeName,\n    encodeValue: encodeValue\n});\nconst DEFAULT_ATTRIBUTES = Object.freeze({\n    path: '/'\n});\nfunction setCookie(name, value, attributes = DEFAULT_ATTRIBUTES, { encodeValue: encodeValue$1 = encodeValue, encodeName: encodeName$1 = encodeName } = {}) {\n    return (document.cookie = `${encodeName$1(name)}=${encodeValue$1(value, name)}${stringifyAttributes(attributes)}`);\n}\nfunction getCookie(name, { decodeValue: decodeValue$1 = decodeValue, decodeName: decodeName$1 = decodeName } = {}) {\n    return get(name, decodeValue$1, decodeName$1);\n}\nfunction getCookies({ decodeValue: decodeValue$1 = decodeValue, decodeName: decodeName$1 = decodeName } = {}) {\n    return get(undefined, decodeValue$1, decodeName$1);\n}\nfunction removeCookie(name, attributes = DEFAULT_ATTRIBUTES) {\n    setCookie(name, '', Object.assign({}, attributes, {\n        expires: -1\n    }));\n}\n\nfunction init(converter, defaultAttributes) {\n    const api = {\n        set: function (name, value, attributes) {\n            return setCookie(name, value, Object.assign({}, this.attributes, attributes), {\n                encodeValue: this.converter.write\n            });\n        },\n        get: function (name) {\n            if (arguments.length === 0) {\n                return getCookies(this.converter.read);\n            }\n            if (name == null) {\n                return;\n            }\n            return getCookie(name, this.converter.read);\n        },\n        remove: function (name, attributes) {\n            removeCookie(name, Object.assign({}, this.attributes, attributes));\n        },\n        withAttributes: function (attributes) {\n            return init(this.converter, Object.assign({}, this.attributes, attributes));\n        },\n        withConverter: function (converter) {\n            return init(Object.assign({}, this.converter, converter), this.attributes);\n        }\n    };\n    const config = {\n        attributes: { value: Object.freeze(defaultAttributes) },\n        converter: { value: Object.freeze(converter) }\n    };\n    return Object.create(api, config);\n}\nvar compat = init({ read: DEFAULT_CODEC.decodeValue, write: DEFAULT_CODEC.encodeValue }, DEFAULT_ATTRIBUTES);\n\nexport { compat as Cookies, DEFAULT_ATTRIBUTES, DEFAULT_CODEC, index as Types, getCookie, getCookies, removeCookie, setCookie };\n"]},"metadata":{},"sourceType":"module"}