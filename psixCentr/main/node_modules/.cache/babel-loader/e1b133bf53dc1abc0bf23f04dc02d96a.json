{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u041A\\u0440\\u0438\\u0441\\u0442\\u0438\\u043D\\u0430\\\\Downloads\\\\Telegram Desktop\\\\psixCentr\\\\main\\\\src\\\\components\\\\AppealHistory.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Grid from '@mui/material/Grid';\nimport Box from '@mui/material/Box';\nimport Card from '@mui/material/Card';\nimport InputLabel from '@mui/material/InputLabel';\nimport FormControl from '@mui/material/FormControl';\nimport { CardContent, MenuItem, Select, Typography } from '@mui/material';\nimport \"../assets/css/scrollbar.css\";\nimport AppealService from '../redux/services/AppealService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction AppealHistory() {\n  _s();\n\n  const [answers, setAnswers] = React.useState([]);\n  const [appeals, setAppeals] = React.useState([]);\n  const [types, setTypes] = React.useState([]);\n  const [appealType, setAppealType] = React.useState();\n  const [key, setKey] = React.useState(false);\n\n  const handleChange = event => {\n    setAppealType(event.target.value);\n  };\n\n  const getAppealsWithParams = type => {\n    AppealService.filterAppeal(type).then(res => {\n      setAnswers(res.answers);\n      setAppeals(res.appeals);\n      setTypes(res.types);\n    });\n  };\n\n  React.useEffect(() => {\n    if (key) return;\n    AppealService.getHistoryAppeal().then(res => {\n      if (res !== undefined) {\n        setAnswers(res.answers);\n        setAppeals(res.appeals);\n        setTypes(res.types);\n      }\n    });\n    setKey(true);\n  }, [answers, appeals, types, key]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mt: 2,\n        mx: 4,\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        children: \"\\u041C\\u043E\\u0438 \\u043E\\u0431\\u0440\\u0430\\u0449\\u0435\\u043D\\u0438\\u044F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        sx: {\n          width: \"25%\",\n          mt: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n          id: \"appeal\",\n          children: \"\\u0422\\u0438\\u043F \\u043E\\u0431\\u0440\\u0430\\u0449\\u0435\\u043D\\u0438\\u044F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          labelId: \"appeal\",\n          label: \"appeal\",\n          value: appealType,\n          onChange: e => {\n            handleChange(e);\n            getAppealsWithParams(e.target.value);\n          },\n          children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n            value: \"\",\n            children: /*#__PURE__*/_jsxDEV(\"em\", {\n              children: \"\\u0422\\u0438\\u043F \\u043E\\u0431\\u0440\\u0430\\u0449\\u0435\\u043D\\u0438\\u044F\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 9\n          }, this), types === null || types === void 0 ? void 0 : types.map(type => /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: type.TypeName,\n            children: type.TypeName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 9\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        mt: 1,\n        rowSpacing: 3,\n        columnSpacing: 3,\n        columns: {\n          md: 12\n        },\n        children: [appeals === null || appeals === void 0 ? void 0 : appeals.map(appeal => /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          md: 4,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            className: \"scrollbar\",\n            sx: {\n              height: \"200px\",\n              border: \"1px #000 solid\",\n              overflowY: \"auto\"\n            },\n            children: /*#__PURE__*/_jsxDEV(CardContent, {\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                  children: \" \\u0422\\u0438\\u043F \\u043E\\u0431\\u0440\\u0430\\u0449\\u0435\\u043D\\u0438\\u044F: \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 86,\n                  columnNumber: 25\n                }, this), \" \", appeal.typeappeal]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                  children: \"\\u0414\\u0430\\u0442\\u0430 \\u043E\\u0431\\u0440\\u0430\\u0449\\u0435\\u043D\\u0438\\u044F:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 89,\n                  columnNumber: 25\n                }, this), \" \", appeal.date]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                  children: \"\\u0422\\u0435\\u043A\\u0441\\u0442 \\u043E\\u0431\\u0440\\u0430\\u0449\\u0435\\u043D\\u0438\\u044F: \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 92,\n                  columnNumber: 21\n                }, this), \"   \", appeal.text]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body1\",\n                sx: {\n                  mt: 2\n                },\n                children: /*#__PURE__*/_jsxDEV(\"b\", {\n                  children: \"\\u041D\\u0435 \\u043E\\u0431\\u0440\\u0430\\u0431\\u043E\\u0442\\u0430\\u043D\\u043E\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 97,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this)), answers.map(answer => /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          md: 4,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            className: \"scrollbar\",\n            sx: {\n              height: \"200px\",\n              border: \"1px #000 solid\",\n              overflowY: \"auto\"\n            },\n            children: /*#__PURE__*/_jsxDEV(CardContent, {\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                  children: \" \\u0422\\u0438\\u043F \\u043E\\u0431\\u0440\\u0430\\u0449\\u0435\\u043D\\u0438\\u044F: \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 112,\n                  columnNumber: 25\n                }, this), \" \", answer.appeal.typeappeal]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                  children: \"\\u0414\\u0430\\u0442\\u0430 \\u043E\\u0431\\u0440\\u0430\\u0449\\u0435\\u043D\\u0438\\u044F:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 115,\n                  columnNumber: 25\n                }, this), \" \", answer.appeal.date]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                  children: \"\\u0422\\u0435\\u043A\\u0441\\u0442 \\u043E\\u0431\\u0440\\u0430\\u0449\\u0435\\u043D\\u0438\\u044F: \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 118,\n                  columnNumber: 21\n                }, this), \"   \", answer.appeal.text]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body1\",\n                sx: {\n                  mt: 2\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                  children: \"\\u041E\\u0442\\u0432\\u0435\\u0442: \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 123,\n                  columnNumber: 21\n                }, this), \" \", answer.answertext]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 1\n    }, this)\n  }, void 0, false);\n}\n\n_s(AppealHistory, \"aLa9UJjDXGiqd1OTr9X7EGOnICM=\");\n\n_c = AppealHistory;\nexport default AppealHistory;\n\nvar _c;\n\n$RefreshReg$(_c, \"AppealHistory\");","map":{"version":3,"sources":["C:/Users/Кристина/Downloads/Telegram Desktop/psixCentr/main/src/components/AppealHistory.tsx"],"names":["React","Grid","Box","Card","InputLabel","FormControl","CardContent","MenuItem","Select","Typography","AppealService","AppealHistory","answers","setAnswers","useState","appeals","setAppeals","types","setTypes","appealType","setAppealType","key","setKey","handleChange","event","target","value","getAppealsWithParams","type","filterAppeal","then","res","useEffect","getHistoryAppeal","undefined","mt","mx","display","flexDirection","alignItems","width","e","map","TypeName","md","appeal","height","border","overflowY","typeappeal","date","text","answer","answertext"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport \"bootstrap/dist/css/bootstrap.min.css\"\r\nimport Grid from '@mui/material/Grid'\r\nimport Box from '@mui/material/Box'\r\nimport Card from '@mui/material/Card'\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport { CardContent, MenuItem, Select, Typography, SelectChangeEvent } from '@mui/material';\r\nimport \"../assets/css/scrollbar.css\"\r\nimport AppealService from '../redux/services/AppealService';\r\nimport { AnswerModel } from '../models/AnswerModel';\r\nimport { Appeal } from '../models/AppealModel';\r\nimport { TypeAppeal } from '../models/TypeAppealModel';\r\nimport { type } from '@testing-library/user-event/dist/type';\r\n\r\nfunction AppealHistory() {\r\n\r\n    const [answers,setAnswers] = React.useState<AnswerModel[]>([]);\r\n    const [appeals,setAppeals] = React.useState<Appeal[]>([]);\r\n    const [types,setTypes] = React.useState<TypeAppeal[]>([]);\r\n    const [appealType,setAppealType]= React.useState<string>();\r\n    const [key,setKey] = React.useState<boolean>(false);\r\n    const handleChange = (event: SelectChangeEvent) => {\r\n    setAppealType(event.target.value as string);\r\n  };\r\n  const getAppealsWithParams = (type:string) =>{\r\n    AppealService.filterAppeal(type).then((res:any) => {\r\n        setAnswers(res.answers);\r\n        setAppeals(res.appeals);\r\n        setTypes(res.types);\r\n    })\r\n  }\r\n  React.useEffect(() => {\r\n    if (key) return;\r\n    AppealService.getHistoryAppeal().then((res:any)=>{\r\n      if (res !== undefined){\r\n        setAnswers(res.answers);\r\n        setAppeals(res.appeals);\r\n        setTypes(res.types);\r\n\r\n      }\r\n    })\r\n    setKey(true)\r\n  }, [answers,appeals,types,key])\r\n  return (\r\n<>\r\n<Box sx={{\r\n    mt:2,\r\n    mx:4,\r\n    display:\"flex\",\r\n    flexDirection:\"column\",\r\n    alignItems:\"center\",\r\n}}>\r\n    <Typography variant=\"h4\">\r\n        Мои обращения\r\n    </Typography>\r\n    <FormControl sx={{\r\n        width:\"25%\",\r\n        mt:2\r\n    }}>\r\n    <InputLabel id=\"appeal\">Тип обращения</InputLabel>\r\n    <Select labelId='appeal' label=\"appeal\" value={appealType} onChange={e=>{handleChange(e); getAppealsWithParams(e.target.value)}}>\r\n        <MenuItem value=\"\">\r\n        <em>Тип обращения</em>\r\n        </MenuItem>\r\n        {types?.map((type)=>(\r\n        <MenuItem value={type.TypeName}>\r\n        {type.TypeName}\r\n        </MenuItem>\r\n        ))}\r\n        \r\n       \r\n    </Select>\r\n    </FormControl>\r\n    \r\n    <Grid container mt={1} rowSpacing={3} columnSpacing={3} columns={{md: 12}}>\r\n        {appeals?.map((appeal)=>(\r\n            <Grid item md={4}>\r\n            <Card className=\"scrollbar\" sx={{\r\n                height:\"200px\",\r\n                border:\"1px #000 solid\",\r\n                overflowY:\"auto\"\r\n            }}>\r\n                <CardContent>\r\n                    <Typography >\r\n                        <b> Тип обращения: </b> {appeal.typeappeal}\r\n                    </Typography>\r\n                    <Typography >\r\n                        <b>Дата обращения:</b> {appeal.date}\r\n                    </Typography>\r\n                    <Typography  >\r\n                    <b>Текст обращения: </b>   {appeal.text}\r\n                    </Typography>\r\n                    <Typography variant=\"body1\" sx={{\r\n                        mt:2\r\n                    }}>\r\n                    <b>Не обработано</b>   \r\n                    </Typography>\r\n                </CardContent>\r\n            </Card>\r\n        </Grid>\r\n        ))}\r\n        {answers.map((answer)=>(\r\n            <Grid item md={4}>\r\n            <Card className=\"scrollbar\" sx={{\r\n                height:\"200px\",\r\n                border:\"1px #000 solid\",\r\n                overflowY:\"auto\"\r\n            }}>\r\n                <CardContent>\r\n                    <Typography >\r\n                        <b> Тип обращения: </b> {answer.appeal.typeappeal}\r\n                    </Typography>\r\n                    <Typography >\r\n                        <b>Дата обращения:</b> {answer.appeal.date}\r\n                    </Typography>\r\n                    <Typography  >\r\n                    <b>Текст обращения: </b>   {answer.appeal.text}\r\n                    </Typography>\r\n                    <Typography variant=\"body1\" sx={{\r\n                        mt:2\r\n                    }}>\r\n                    <b>Ответ: </b> {answer.answertext}   \r\n                    </Typography>\r\n                </CardContent>\r\n            </Card>\r\n        </Grid>\r\n        ))}\r\n    </Grid>\r\n</Box>\r\n</>\r\n  );\r\n}\r\n\r\nexport default AppealHistory;"]},"metadata":{},"sourceType":"module"}