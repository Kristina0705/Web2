{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u041A\\u0440\\u0438\\u0441\\u0442\\u0438\\u043D\\u0430\\\\Downloads\\\\Telegram Desktop\\\\psixCentr\\\\main\\\\src\\\\components\\\\AnswerHistory.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { LocalizationProvider } from '@mui/x-date-pickers-pro';\nimport { AdapterDayjs } from '@mui/x-date-pickers-pro/AdapterDayjs';\nimport { DatePicker } from '@mui/x-date-pickers/DatePicker';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Grid from '@mui/material/Grid';\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\nimport Card from '@mui/material/Card';\nimport Modal from '@mui/material/Modal';\nimport Snackbar from '@mui/material/Snackbar';\nimport Alert from '@mui/material/Alert';\nimport { CardContent, Typography } from '@mui/material';\nimport \"../assets/css/scrollbar.css\";\nimport AnswerService from '../redux/services/AnswerService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst style = {\n  position: 'absolute',\n  top: '50%',\n  left: '50%',\n  transform: 'translate(-50%, -50%)',\n  width: 400,\n  bgcolor: 'background.paper',\n  border: '2px solid #000',\n  boxShadow: 24,\n  p: 4,\n  display: \"flex\",\n  flexDirection: \"column\",\n  alignItems: \"center\"\n};\n\nfunction AnswerHistory() {\n  _s();\n\n  const [dates, setDates] = React.useState({\n    startdate: \"\",\n    finishdate: \"\"\n  });\n  const [successShow, setSuccessShow] = React.useState(false);\n\n  const toggleSuccessShow = () => setSuccessShow(!successShow);\n\n  const [noDataShow, setNoDataShow] = React.useState(false);\n\n  const toggleNoDataShow = () => setNoDataShow(!noDataShow);\n\n  const [answers, setAnswers] = React.useState([]);\n  const [startValue, setStartValue] = React.useState(null);\n  const [endValue, setEndValue] = React.useState(null);\n  const [open, setOpen] = React.useState(false);\n\n  const handleClose = () => setOpen(false);\n\n  const handleOpen = () => setOpen(true);\n\n  const [key, setKey] = React.useState(false);\n  const [appealType, setAppealType] = React.useState();\n\n  const handleChange = event => {\n    setAppealType(event.target.value);\n  };\n\n  React.useEffect(() => {\n    if (key) return;\n    AnswerService.getAnswers().then(res => {\n      if (res !== undefined) {\n        setAnswers(res);\n      }\n    });\n    setKey(true);\n  }, [answers, key]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mt: 2,\n        mx: 4,\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: \"flex\",\n          justifyContent: \"space-between\",\n          width: \"100%\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h4\",\n          sx: {},\n          children: \"\\u041C\\u043E\\u0438 \\u043E\\u0442\\u0432\\u0435\\u0442\\u044B\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          onClick: handleOpen,\n          sx: {},\n          children: \"\\u0421\\u0444\\u043E\\u0440\\u043C\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C \\u043E\\u0442\\u0447\\u0435\\u0442\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        mt: 1,\n        rowSpacing: 3,\n        columnSpacing: 3,\n        columns: {\n          md: 12\n        },\n        children: answers.map(answer => /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          md: 4,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            className: \"scrollbar\",\n            sx: {\n              height: \"200px\",\n              border: \"1px #000 solid\",\n              overflowY: \"auto\"\n            },\n            children: /*#__PURE__*/_jsxDEV(CardContent, {\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                  children: \" \\u041F\\u0430\\u0446\\u0438\\u0435\\u043D\\u0442: \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 104,\n                  columnNumber: 25\n                }, this), \" \", answer.appeal.user.surname, \" \", answer.appeal.user.name]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                  children: \" \\u0422\\u0438\\u043F \\u043E\\u0431\\u0440\\u0430\\u0449\\u0435\\u043D\\u0438\\u044F: \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 107,\n                  columnNumber: 25\n                }, this), \" \", answer.appeal.typeappeal]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                  children: \"\\u0414\\u0430\\u0442\\u0430 \\u043E\\u0431\\u0440\\u0430\\u0449\\u0435\\u043D\\u0438\\u044F:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 110,\n                  columnNumber: 25\n                }, this), \" \", answer.appeal.date]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                  children: \"\\u0422\\u0435\\u043A\\u0441\\u0442 \\u043E\\u0431\\u0440\\u0430\\u0449\\u0435\\u043D\\u0438\\u044F: \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 113,\n                  columnNumber: 21\n                }, this), \"   \", answer.appeal.text]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body1\",\n                sx: {\n                  mt: 2\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                  children: \"\\u041E\\u0442\\u0432\\u0435\\u0442:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 118,\n                  columnNumber: 21\n                }, this), \"   \", answer.answertext]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      open: open,\n      onClose: handleClose,\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: style,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          children: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u043F\\u0435\\u0440\\u0438\\u043E\\u0434 \\u0434\\u043B\\u044F \\u043E\\u0442\\u0447\\u0435\\u0442\\u0430\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(LocalizationProvider, {\n          dateAdapter: AdapterDayjs,\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              mt: 2\n            },\n            children: /*#__PURE__*/_jsxDEV(DatePicker, {\n              label: \"\\u041D\\u0430\\u0447\\u0430\\u043B\\u044C\\u043D\\u0430\\u044F \\u0434\\u0430\\u0442\\u0430\",\n              value: dates.startdate,\n              onChange: newValue => {\n                setDates({ ...dates,\n                  startdate: newValue.format('DD/MM/YYYY')\n                });\n              },\n              renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 143,\n                columnNumber: 34\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              mt: 2,\n              mb: 2\n            },\n            children: /*#__PURE__*/_jsxDEV(DatePicker, {\n              label: \"\\u041A\\u043E\\u043D\\u0435\\u0447\\u043D\\u0430\\u044F \\u0434\\u0430\\u0442\\u0430\",\n              value: dates.finishdate,\n              onChange: newValue => {\n                setDates({ ...dates,\n                  finishdate: newValue.format('DD/MM/YYYY')\n                });\n              },\n              renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 156,\n                columnNumber: 34\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 7\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: e => {\n            if (dates.startdate === \"\" || dates.finishdate === \"\") {\n              setNoDataShow(true);\n              return;\n            }\n\n            AnswerService.MakeReport(dates).then(res => {\n              if (res) {\n                handleClose();\n                setSuccessShow(true);\n              }\n            });\n          },\n          variant: \"contained\",\n          children: \"\\u0421\\u0433\\u0435\\u043D\\u0435\\u0440\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C \\u043E\\u0442\\u0447\\u0435\\u0442\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n      open: noDataShow,\n      autoHideDuration: 5000,\n      onClose: toggleNoDataShow,\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        onClose: toggleNoDataShow,\n        severity: \"error\",\n        sx: {\n          width: '100%'\n        },\n        children: \"\\u0417\\u0430\\u043F\\u043E\\u043B\\u043D\\u0438\\u0442\\u0435 \\u0432\\u0441\\u0435 \\u043F\\u043E\\u043B\\u044F!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n      open: successShow,\n      autoHideDuration: 5000,\n      onClose: toggleSuccessShow,\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        onClose: toggleSuccessShow,\n        severity: \"success\",\n        sx: {\n          width: '100%'\n        },\n        children: \"\\u041E\\u0442\\u0447\\u0435\\u0442 \\u043E\\u0442\\u043F\\u0440\\u0430\\u0432\\u043B\\u0435\\u043D \\u0443\\u0441\\u043F\\u0435\\u0448\\u043D\\u043E.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(AnswerHistory, \"64K8tOju6zCTwVkmUWi5ZdTaMg0=\");\n\n_c = AnswerHistory;\nexport default AnswerHistory;\n\nvar _c;\n\n$RefreshReg$(_c, \"AnswerHistory\");","map":{"version":3,"sources":["C:/Users/Кристина/Downloads/Telegram Desktop/psixCentr/main/src/components/AnswerHistory.tsx"],"names":["React","LocalizationProvider","AdapterDayjs","DatePicker","Grid","Box","TextField","Button","Card","Modal","Snackbar","Alert","CardContent","Typography","AnswerService","style","position","top","left","transform","width","bgcolor","border","boxShadow","p","display","flexDirection","alignItems","AnswerHistory","dates","setDates","useState","startdate","finishdate","successShow","setSuccessShow","toggleSuccessShow","noDataShow","setNoDataShow","toggleNoDataShow","answers","setAnswers","startValue","setStartValue","endValue","setEndValue","open","setOpen","handleClose","handleOpen","key","setKey","appealType","setAppealType","handleChange","event","target","value","useEffect","getAnswers","then","res","undefined","mt","mx","justifyContent","md","map","answer","height","overflowY","appeal","user","surname","name","typeappeal","date","text","answertext","newValue","format","params","mb","e","MakeReport"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Dayjs } from 'dayjs';\r\nimport { LocalizationProvider } from '@mui/x-date-pickers-pro';\r\nimport { AdapterDayjs } from '@mui/x-date-pickers-pro/AdapterDayjs';\r\nimport { DatePicker } from '@mui/x-date-pickers/DatePicker';\r\nimport \"bootstrap/dist/css/bootstrap.min.css\"\r\nimport Grid from '@mui/material/Grid'\r\nimport Box from '@mui/material/Box'\r\nimport TextField from '@mui/material/TextField'\r\nimport Button from '@mui/material/Button'\r\nimport Card from '@mui/material/Card'\r\nimport Modal from '@mui/material/Modal';\r\nimport Snackbar from '@mui/material/Snackbar';\r\nimport Alert from '@mui/material/Alert'; \r\nimport { CardContent, Typography, SelectChangeEvent } from '@mui/material';\r\nimport \"../assets/css/scrollbar.css\"\r\nimport AnswerService from '../redux/services/AnswerService';\r\nimport { AnswerModel } from '../models/AnswerModel';\r\nimport { Dates } from '../models/DatesModel';\r\n\r\nconst style = {\r\n    position: 'absolute' as 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    width: 400,\r\n    bgcolor: 'background.paper',\r\n    border: '2px solid #000',\r\n    boxShadow: 24,\r\n    p: 4,\r\n    display:\"flex\",\r\n    flexDirection:\"column\",\r\n    alignItems:\"center\"\r\n  };\r\n\r\n\r\nfunction AnswerHistory() {\r\n\r\n  const [dates,setDates] = React.useState<Dates>({\r\n    startdate:\"\",\r\n    finishdate:\"\"\r\n  })\r\n  const [successShow,setSuccessShow] = React.useState(false);\r\n    const toggleSuccessShow = () => setSuccessShow(!successShow)\r\n    const [noDataShow,setNoDataShow] = React.useState(false);\r\n    const toggleNoDataShow = () => setNoDataShow(!noDataShow);\r\n  const [answers,setAnswers] = React.useState<AnswerModel[]>([])\r\n    const [startValue, setStartValue] = React.useState<Dayjs | null>(null);\r\n    const [endValue, setEndValue] = React.useState<Dayjs | null>(null);\r\n    const [open,setOpen] = React.useState(false);\r\n    const handleClose = () => setOpen(false);\r\n    const handleOpen = () => setOpen(true);\r\n    const [key,setKey] = React.useState<boolean>(false);\r\n    const [appealType,setAppealType]= React.useState<string>();\r\n    const handleChange = (event: SelectChangeEvent) => {\r\n    setAppealType(event.target.value as string);\r\n  };\r\n  React.useEffect(() => {\r\n    if (key) return;\r\n    AnswerService.getAnswers().then((res)=>{\r\n      if (res !== undefined){\r\n        setAnswers(res)\r\n      }\r\n    })\r\n    setKey(true)\r\n  }, [answers,key])\r\n\r\n\r\n  return (\r\n<>\r\n<Box sx={{\r\n    mt:2,\r\n    mx:4,\r\n    display:\"flex\",\r\n    flexDirection:\"column\",\r\n    alignItems:\"center\",\r\n}}>\r\n    <Box sx={{\r\n        display:\"flex\",\r\n        justifyContent:\"space-between\",\r\n        width:\"100%\"\r\n    }}>\r\n    <Typography variant=\"h4\" sx={{\r\n    }}>\r\n        Мои ответы\r\n    </Typography>\r\n    <Button variant=\"contained\" onClick={handleOpen} sx={{\r\n    }}>\r\n        Сформировать отчет\r\n    </Button>\r\n    </Box>\r\n    \r\n\r\n    <Grid container mt={1} rowSpacing={3} columnSpacing={3} columns={{md: 12}} >\r\n        {answers.map((answer)=>(\r\n          <Grid item md={4}>\r\n            <Card className=\"scrollbar\" sx={{\r\n                height:\"200px\",\r\n                border:\"1px #000 solid\",\r\n                overflowY:\"auto\"\r\n            }}>\r\n                <CardContent>\r\n                    <Typography>\r\n                        <b> Пациент: </b> {answer.appeal.user.surname} {answer.appeal.user.name}\r\n                    </Typography>\r\n                    <Typography >\r\n                        <b> Тип обращения: </b> {answer.appeal.typeappeal}\r\n                    </Typography>\r\n                    <Typography>\r\n                        <b>Дата обращения:</b> {answer.appeal.date}\r\n                    </Typography>\r\n                    <Typography  >\r\n                    <b>Текст обращения: </b>   {answer.appeal.text}\r\n                    </Typography>\r\n                    <Typography variant=\"body1\" sx={{\r\n                        mt:2\r\n                    }}>\r\n                    <b>Ответ:</b>   {answer.answertext}\r\n                    </Typography>\r\n                </CardContent>\r\n            </Card>\r\n        </Grid>\r\n        ))}\r\n        \r\n        \r\n    </Grid>\r\n</Box>\r\n<Modal open={open}\r\n        onClose={handleClose}>\r\n    <Box sx={style}>\r\n        <Typography variant=\"h5\">\r\n            Выберите период для отчета\r\n        </Typography>\r\n    <LocalizationProvider dateAdapter={AdapterDayjs}>\r\n        <Box sx={{\r\n            mt:2    \r\n        }}>\r\n        <DatePicker\r\n        label=\"Начальная дата\"\r\n        value={dates.startdate}\r\n        onChange={(newValue:Dayjs| null) => {setDates({...dates,startdate:newValue!.format('DD/MM/YYYY')})\r\n        }}\r\n        renderInput={(params) => <TextField {...params} \r\n        />}\r\n      />  \r\n        </Box>\r\n      <Box sx={{\r\n        mt:2,\r\n        mb:2\r\n        }}>\r\n      <DatePicker \r\n        label=\"Конечная дата\"\r\n        value={dates.finishdate}\r\n        onChange={(newValue:Dayjs| null) => {setDates({...dates,finishdate:newValue!.format('DD/MM/YYYY')})\r\n        }}\r\n        renderInput={(params) => <TextField {...params} />}\r\n      />\r\n      </Box>\r\n      </LocalizationProvider>\r\n      <Button onClick={e=>{if (dates.startdate===\"\"||dates.finishdate===\"\"){setNoDataShow(true);return;}\r\n        AnswerService.MakeReport(dates).then((res)=>{\r\n          if(res){\r\n            handleClose();\r\n            setSuccessShow(true);\r\n          }\r\n        })}} variant=\"contained\">\r\n        Сгенерировать отчет\r\n      </Button>\r\n    </Box>\r\n</Modal>\r\n<Snackbar open={noDataShow} autoHideDuration={5000} onClose={toggleNoDataShow}>\r\n        <Alert onClose={toggleNoDataShow} severity=\"error\" sx={{ width: '100%' }}>\r\n          Заполните все поля!\r\n        </Alert>\r\n      </Snackbar>\r\n      <Snackbar open={successShow} autoHideDuration={5000} onClose={toggleSuccessShow}>\r\n        <Alert onClose={toggleSuccessShow} severity=\"success\" sx={{ width: '100%' }}>\r\n          Отчет отправлен успешно.\r\n        </Alert>\r\n      </Snackbar>\r\n</>\r\n  );\r\n}\r\n\r\nexport default AnswerHistory;"]},"metadata":{},"sourceType":"module"}