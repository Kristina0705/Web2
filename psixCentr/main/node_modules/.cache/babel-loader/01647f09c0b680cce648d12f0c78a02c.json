{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u041A\\u0440\\u0438\\u0441\\u0442\\u0438\\u043D\\u0430\\\\Downloads\\\\Telegram Desktop\\\\psixCentr\\\\main\\\\src\\\\components\\\\PsixHome.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport FormControl from '@mui/material/FormControl';\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\nimport Select from '@mui/material/Select';\nimport MenuItem from '@mui/material/MenuItem';\nimport InputLabel from '@mui/material/InputLabel';\nimport Button from '@mui/material/Button';\nimport AuthModal from './AuthModal';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { useNavigate } from 'react-router-dom';\nimport \"../assets/css/index.css\";\nimport { useSelector } from \"react-redux\";\nimport { Typography } from '@mui/material';\nimport Snackbar from '@mui/material/Snackbar';\nimport Alert from '@mui/material/Alert';\nimport AppealService from '../redux/services/AppealService';\nimport TypeAppealService from '../redux/services/TypeAppealService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction PsixHome() {\n  _s();\n\n  const handleChange = event => {\n    setTmpAppeal({ ...tmpAppeal,\n      typeappeal: event.target.value\n    });\n  };\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const [noDataShow, setNoDataShow] = React.useState(false);\n\n  const noDataHandleShow = () => setNoDataShow(true);\n\n  const noDataHandleClose = () => setNoDataShow(false);\n\n  const [show, setShow] = React.useState(false);\n\n  const handleClose = () => setShow(false);\n\n  const handleShow = () => setShow(true);\n\n  const [types, setTypes] = React.useState([]);\n  const user = useSelector(state => state);\n  const [open, setOpen] = React.useState(false);\n  const navigate = useNavigate();\n  const [key, setKey] = React.useState(false);\n  const [tmpAppeal, setTmpAppeal] = React.useState({\n    typeappeal: \"\",\n    text: \"\"\n  });\n\n  const textChange = event => {\n    setTmpAppeal({ ...tmpAppeal,\n      text: event.target.value.trim()\n    });\n  };\n\n  React.useEffect(() => {\n    if (key) return;\n    TypeAppealService.getTypesAppeal().then(res => {\n      if (res !== undefined) {\n        setTypes(res);\n      }\n    });\n    setKey(true);\n  }, [types, key]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        backgroundColor: \"#FFF\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        width: \"100%\",\n        margin: \"15px auto\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        children: \"\\u0417\\u0434\\u0440\\u0430\\u0432\\u0441\\u0442\\u0432\\u0443\\u0439\\u0442\\u0435!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        sx: {\n          mt: 1,\n          mb: 2\n        },\n        children: \"\\u0417\\u0434\\u0435\\u0441\\u044C \\u0432\\u044B \\u043C\\u043E\\u0436\\u0435\\u0442\\u0435 \\u043E\\u0431\\u0440\\u0430\\u0442\\u0438\\u0442\\u044C\\u0441\\u044F \\u043A \\u043D\\u0430\\u043C \\u0437\\u0430 \\u043F\\u043E\\u043C\\u043E\\u0449\\u044C\\u044E. \\u041D\\u0430\\u0448\\u0438 \\u0441\\u043F\\u0435\\u0446\\u0438\\u0430\\u043B\\u0438\\u0441\\u0442\\u044B \\u043E\\u0431\\u044F\\u0437\\u0430\\u0442\\u0435\\u043B\\u044C\\u043D\\u043E \\u043F\\u043E\\u0441\\u0442\\u0430\\u0440\\u0430\\u044E\\u0442\\u0441\\u044F \\u0432\\u0430\\u043C \\u043F\\u043E\\u043C\\u043E\\u0447\\u044C.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        style: {\n          width: \"30%\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n          id: \"demo-simple-select-label\",\n          children: \"\\u0422\\u0438\\u043F \\u043E\\u0431\\u0440\\u0430\\u0449\\u0435\\u043D\\u0438\\u044F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 3\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          labelId: \"demo-simple-select-label\",\n          id: \"demo-simple-select\",\n          value: tmpAppeal.typeappeal,\n          label: \"Age\",\n          onChange: handleChange,\n          children: types.map(type => /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: type.TypeName,\n            children: type.TypeName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 7\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 3\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          multiline: true,\n          label: \"\\u0422\\u0435\\u043A\\u0441\\u0442 \\u043E\\u0431\\u0440\\u0430\\u0449\\u0435\\u043D\\u0438\\u044F\",\n          onChange: textChange,\n          fullWidth: true,\n          minRows: 7,\n          size: \"medium\",\n          sx: {\n            mt: 2\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 3\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          sx: {\n            mt: 2,\n            mx: \"auto\",\n            width: \"30%\"\n          },\n          onClick: e => {\n            if (user !== null && user !== void 0 && user.client.isAuth) {\n              if (tmpAppeal.typeappeal === \"\" || tmpAppeal.text === \"\") {\n                noDataHandleShow();\n                return;\n              }\n\n              AppealService.AddAppeal(tmpAppeal).then(res => {\n                if (res) {\n                  handleShow();\n                  setTimeout(() => {\n                    navigate(0);\n                  }, 3000);\n                }\n              });\n            } else {\n              setOpen(true);\n            }\n          },\n          children: \"\\u041E\\u0442\\u043F\\u0440\\u0430\\u0432\\u0438\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 3\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(AuthModal, {\n      open: open,\n      handlerClose: () => setOpen(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n      open: show,\n      autoHideDuration: 3000,\n      onClose: handleClose,\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        onClose: handleClose,\n        severity: \"success\",\n        sx: {\n          width: '100%'\n        },\n        children: \"\\u0412\\u0430\\u0448\\u0435 \\u043E\\u0431\\u0440\\u0430\\u0449\\u0435\\u043D\\u0438\\u0435 \\u0443\\u0441\\u043F\\u0435\\u0448\\u043D\\u043E \\u043E\\u0442\\u043F\\u0440\\u0430\\u0432\\u043B\\u0435\\u043D\\u043E.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n      open: noDataShow,\n      autoHideDuration: 3000,\n      onClose: noDataHandleClose,\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        onClose: noDataHandleClose,\n        severity: \"warning\",\n        sx: {\n          width: '100%'\n        },\n        children: \"\\u0417\\u0430\\u043F\\u043E\\u043B\\u043D\\u0438\\u0442\\u0435 \\u0432\\u0441\\u0435 \\u043F\\u043E\\u043B\\u044F.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(PsixHome, \"Whq3//KSEy/x3IBQuuJX5POAR6c=\", false, function () {\n  return [useSelector, useNavigate];\n});\n\n_c = PsixHome;\nexport default PsixHome;\n\nvar _c;\n\n$RefreshReg$(_c, \"PsixHome\");","map":{"version":3,"sources":["C:/Users/Кристина/Downloads/Telegram Desktop/psixCentr/main/src/components/PsixHome.tsx"],"names":["React","FormControl","Box","TextField","Select","MenuItem","InputLabel","Button","AuthModal","useNavigate","useSelector","Typography","Snackbar","Alert","AppealService","TypeAppealService","PsixHome","handleChange","event","setTmpAppeal","tmpAppeal","typeappeal","target","value","handleOpen","setOpen","noDataShow","setNoDataShow","useState","noDataHandleShow","noDataHandleClose","show","setShow","handleClose","handleShow","types","setTypes","user","state","open","navigate","key","setKey","text","textChange","trim","useEffect","getTypesAppeal","then","res","undefined","backgroundColor","display","flexDirection","alignItems","width","margin","mt","mb","map","type","TypeName","mx","e","client","isAuth","AddAppeal","setTimeout"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,GAAP,MAAgB,mBAAhB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,MAAP,MAA0C,sBAA1C;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAO,sCAAP;AACA,SAAQC,WAAR,QAA0B,kBAA1B;AACA,OAAO,yBAAP;AACA,SAASC,WAAT,QAA2B,aAA3B;AAEA,SAASC,UAAT,QAA2B,eAA3B;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AAGA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,OAAOC,iBAAP,MAA8B,qCAA9B;;;;AAGA,SAASC,QAAT,GAAoB;AAAA;;AAElB,QAAMC,YAAY,GAAIC,KAAD,IAA8B;AACjDC,IAAAA,YAAY,CAAC,EAAC,GAAGC,SAAJ;AAAcC,MAAAA,UAAU,EAACH,KAAK,CAACI,MAAN,CAAaC;AAAtC,KAAD,CAAZ;AACD,GAFD;;AAGC,QAAMC,UAAU,GAAG,MAAM;AACxBC,IAAAA,OAAO,CAAC,IAAD,CAAP;AACA,GAFD;;AAGA,QAAM,CAACC,UAAD,EAAYC,aAAZ,IAA6B3B,KAAK,CAAC4B,QAAN,CAAe,KAAf,CAAnC;;AACA,QAAMC,gBAAgB,GAAG,MAAMF,aAAa,CAAC,IAAD,CAA5C;;AACA,QAAMG,iBAAiB,GAAG,MAAMH,aAAa,CAAC,KAAD,CAA7C;;AACA,QAAM,CAACI,IAAD,EAAMC,OAAN,IAAiBhC,KAAK,CAAC4B,QAAN,CAAe,KAAf,CAAvB;;AACA,QAAMK,WAAW,GAAG,MAAMD,OAAO,CAAC,KAAD,CAAjC;;AACC,QAAME,UAAU,GAAG,MAAMF,OAAO,CAAC,IAAD,CAAhC;;AACD,QAAM,CAACG,KAAD,EAAOC,QAAP,IAAmBpC,KAAK,CAAC4B,QAAN,CAA6B,EAA7B,CAAzB;AACA,QAAMS,IAAI,GAAG3B,WAAW,CAAE4B,KAAD,IAAsBA,KAAvB,CAAxB;AACD,QAAM,CAACC,IAAD,EAAOd,OAAP,IAAkBzB,KAAK,CAAC4B,QAAN,CAAe,KAAf,CAAxB;AACA,QAAMY,QAAQ,GAAG/B,WAAW,EAA5B;AACA,QAAM,CAACgC,GAAD,EAAKC,MAAL,IAAe1C,KAAK,CAAC4B,QAAN,CAAwB,KAAxB,CAArB;AACA,QAAM,CAACR,SAAD,EAAWD,YAAX,IAA2BnB,KAAK,CAAC4B,QAAN,CAA2B;AAC1DP,IAAAA,UAAU,EAAC,EAD+C;AAE1DsB,IAAAA,IAAI,EAAC;AAFqD,GAA3B,CAAjC;;AAKA,QAAMC,UAAU,GAAI1B,KAAD,IAAgD;AACjEC,IAAAA,YAAY,CAAC,EAAC,GAAGC,SAAJ;AAAcuB,MAAAA,IAAI,EAACzB,KAAK,CAACI,MAAN,CAAaC,KAAb,CAAmBsB,IAAnB;AAAnB,KAAD,CAAZ;AACH,GAFC;;AAIA7C,EAAAA,KAAK,CAAC8C,SAAN,CAAgB,MAAM;AACpB,QAAIL,GAAJ,EAAS;AACT1B,IAAAA,iBAAiB,CAACgC,cAAlB,GAAmCC,IAAnC,CAAyCC,GAAD,IAAO;AAC7C,UAAIA,GAAG,KAAKC,SAAZ,EAAsB;AACpBd,QAAAA,QAAQ,CAACa,GAAD,CAAR;AACD;AACF,KAJD;AAKAP,IAAAA,MAAM,CAAC,IAAD,CAAN;AACD,GARD,EAQG,CAACP,KAAD,EAAOM,GAAP,CARH;AAUA,sBACE;AAAA,4BACA,QAAC,GAAD;AAAK,MAAA,EAAE,EAAE;AACPU,QAAAA,eAAe,EAAC,MADT;AAEPC,QAAAA,OAAO,EAAC,MAFD;AAGPC,QAAAA,aAAa,EAAC,QAHP;AAIPC,QAAAA,UAAU,EAAC,QAJJ;AAKPC,QAAAA,KAAK,EAAC,MALC;AAMPC,QAAAA,MAAM,EAAC;AANA,OAAT;AAAA,8BAQE,QAAC,UAAD;AAAY,QAAA,OAAO,EAAC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARF,eAWE,QAAC,UAAD;AAAY,QAAA,OAAO,EAAC,IAApB;AAAyB,QAAA,EAAE,EAAE;AAC3BC,UAAAA,EAAE,EAAC,CADwB;AAE3BC,UAAAA,EAAE,EAAC;AAFwB,SAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAXF,eAiBA,QAAC,WAAD;AAAa,QAAA,KAAK,EAAE;AAClBH,UAAAA,KAAK,EAAC;AADY,SAApB;AAAA,gCAIF,QAAC,UAAD;AAAY,UAAA,EAAE,EAAC,0BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJE,eAKF,QAAC,MAAD;AACE,UAAA,OAAO,EAAC,0BADV;AAEE,UAAA,EAAE,EAAC,oBAFL;AAGE,UAAA,KAAK,EAAEnC,SAAS,CAACC,UAHnB;AAIE,UAAA,KAAK,EAAC,KAJR;AAKE,UAAA,QAAQ,EAAEJ,YALZ;AAAA,oBAOGkB,KAAK,CAACwB,GAAN,CAAWC,IAAD,iBACT,QAAC,QAAD;AAAU,YAAA,KAAK,EAAEA,IAAI,CAACC,QAAtB;AAAA,sBAAiCD,IAAI,CAACC;AAAtC;AAAA;AAAA;AAAA;AAAA,kBADD;AAPH;AAAA;AAAA;AAAA;AAAA,gBALE,eAgBF,QAAC,SAAD;AAAW,UAAA,SAAS,MAApB;AAAqB,UAAA,KAAK,EAAC,uFAA3B;AAA6C,UAAA,QAAQ,EAAEjB,UAAvD;AAAmE,UAAA,SAAS,MAA5E;AAA6E,UAAA,OAAO,EAAE,CAAtF;AAAyF,UAAA,IAAI,EAAC,QAA9F;AAAuG,UAAA,EAAE,EAAE;AACzGa,YAAAA,EAAE,EAAC;AADsG;AAA3G;AAAA;AAAA;AAAA;AAAA,gBAhBE,eAsBF,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAC,WAAhB;AAA4B,UAAA,EAAE,EAAE;AAC9BA,YAAAA,EAAE,EAAC,CAD2B;AAE9BK,YAAAA,EAAE,EAAC,MAF2B;AAG9BP,YAAAA,KAAK,EAAC;AAHwB,WAAhC;AAIG,UAAA,OAAO,EAAEQ,CAAC,IAAE;AAAC,gBAAI1B,IAAJ,aAAIA,IAAJ,eAAIA,IAAI,CAAE2B,MAAN,CAAaC,MAAjB,EAAwB;AACtC,kBAAI7C,SAAS,CAACC,UAAV,KAAuB,EAAvB,IAA2BD,SAAS,CAACuB,IAAV,KAAiB,EAAhD,EAAmD;AAACd,gBAAAA,gBAAgB;AAAG;AAAQ;;AAC/Ef,cAAAA,aAAa,CAACoD,SAAd,CAAwB9C,SAAxB,EAAmC4B,IAAnC,CAAyCC,GAAD,IAAO;AAC7C,oBAAGA,GAAH,EAAO;AACLf,kBAAAA,UAAU;AACTiC,kBAAAA,UAAU,CAAC,MAAI;AAAC3B,oBAAAA,QAAQ,CAAC,CAAD,CAAR;AAAY,mBAAlB,EAAmB,IAAnB,CAAV;AAEF;AACF,eAND;AAQD,aAVe,MAWZ;AAACf,cAAAA,OAAO,CAAC,IAAD,CAAP;AAAc;AAAC,WAfpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAtBE;AAAA;AAAA;AAAA;AAAA;AAAA,cAjBA;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,eA6DA,QAAC,SAAD;AAAW,MAAA,IAAI,EAAEc,IAAjB;AAAuB,MAAA,YAAY,EAAE,MAAMd,OAAO,CAAC,KAAD;AAAlD;AAAA;AAAA;AAAA;AAAA,YA7DA,eA8DA,QAAC,QAAD;AAAU,MAAA,IAAI,EAAEM,IAAhB;AAAsB,MAAA,gBAAgB,EAAE,IAAxC;AAA8C,MAAA,OAAO,EAAEE,WAAvD;AAAA,6BACI,QAAC,KAAD;AAAO,QAAA,OAAO,EAAEA,WAAhB;AAA6B,QAAA,QAAQ,EAAC,SAAtC;AAAgD,QAAA,EAAE,EAAE;AAAEsB,UAAAA,KAAK,EAAE;AAAT,SAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YA9DA,eAmEE,QAAC,QAAD;AAAU,MAAA,IAAI,EAAE7B,UAAhB;AAA4B,MAAA,gBAAgB,EAAE,IAA9C;AAAoD,MAAA,OAAO,EAAEI,iBAA7D;AAAA,6BACE,QAAC,KAAD;AAAO,QAAA,OAAO,EAAEA,iBAAhB;AAAmC,QAAA,QAAQ,EAAC,SAA5C;AAAsD,QAAA,EAAE,EAAE;AAAEyB,UAAAA,KAAK,EAAE;AAAT,SAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAnEF;AAAA,kBADF;AA2ED;;GAjHQvC,Q;UAeON,W,EAEGD,W;;;KAjBVO,Q;AAmHT,eAAeA,QAAf","sourcesContent":["import React from 'react';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport Box from '@mui/material/Box';\r\nimport TextField from '@mui/material/TextField';\r\nimport Select, { SelectChangeEvent } from '@mui/material/Select';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport Button from '@mui/material/Button';\r\nimport AuthModal from './AuthModal';\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport {useNavigate} from 'react-router-dom';\r\nimport \"../assets/css/index.css\";\r\nimport { useSelector} from \"react-redux\";\r\nimport { RootState} from \"../redux/store\";\r\nimport { Typography } from '@mui/material';\r\nimport Snackbar from '@mui/material/Snackbar';\r\nimport Alert from '@mui/material/Alert'; \r\nimport {PostAppeal} from \"../models/AppealModel\"\r\nimport { TypeAppeal } from '../models/TypeAppealModel';\r\nimport AppealService from '../redux/services/AppealService';\r\nimport TypeAppealService from '../redux/services/TypeAppealService';\r\n\r\n\r\nfunction PsixHome() {\r\n\r\n  const handleChange = (event: SelectChangeEvent) => {\r\n    setTmpAppeal({...tmpAppeal,typeappeal:event.target.value});\r\n  };\r\n   const handleOpen = () => {\r\n    setOpen(true);\r\n   }\r\n   const [noDataShow,setNoDataShow] = React.useState(false);\r\n   const noDataHandleShow = () => setNoDataShow(true)\r\n   const noDataHandleClose = () => setNoDataShow(false)\r\n   const [show,setShow] = React.useState(false);\r\n   const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n   const [types,setTypes] = React.useState<TypeAppeal[]>([]);\r\n   const user = useSelector((state: RootState) => state);\r\n  const [open, setOpen] = React.useState(false);\r\n  const navigate = useNavigate();\r\n  const [key,setKey] = React.useState<boolean>(false);\r\n  const [tmpAppeal,setTmpAppeal] = React.useState<PostAppeal>({\r\n    typeappeal:\"\",\r\n    text:\"\"\r\n  })\r\n\r\n  const textChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setTmpAppeal({...tmpAppeal,text:event.target.value.trim()});\r\n};\r\n\r\n  React.useEffect(() => {\r\n    if (key) return;\r\n    TypeAppealService.getTypesAppeal().then((res)=>{\r\n      if (res !== undefined){\r\n        setTypes(res)\r\n      }\r\n    })\r\n    setKey(true)\r\n  }, [types,key])\r\n\r\n  return (\r\n    <>\r\n    <Box sx={{\r\n      backgroundColor:\"#FFF\",\r\n      display:\"flex\",\r\n      flexDirection:\"column\",\r\n      alignItems:\"center\",\r\n      width:\"100%\",\r\n      margin:\"15px auto\",\r\n    }}>\r\n      <Typography variant=\"h4\"  >\r\n        Здравствуйте!\r\n      </Typography>\r\n      <Typography variant=\"h6\" sx={{\r\n        mt:1,\r\n        mb:2\r\n      }} >\r\n        Здесь вы можете обратиться к нам за помощью. Наши специалисты обязательно постараются вам помочь.\r\n      </Typography>\r\n    <FormControl style={{\r\n      width:\"30%\",\r\n\r\n    }}>\r\n  <InputLabel id=\"demo-simple-select-label\">Тип обращения</InputLabel>\r\n  <Select\r\n    labelId=\"demo-simple-select-label\"\r\n    id=\"demo-simple-select\"\r\n    value={tmpAppeal.typeappeal}\r\n    label=\"Age\"\r\n    onChange={handleChange}\r\n  >\r\n    {types.map((type)=>(\r\n      <MenuItem value={type.TypeName}>{type.TypeName}</MenuItem>\r\n    ))}\r\n  </Select>\r\n  <TextField multiline label=\"Текст обращения\" onChange={textChange} fullWidth minRows={7} size=\"medium\" sx={{\r\n    mt:2\r\n  }}\r\n  >\r\n\r\n  </TextField>\r\n  <Button variant=\"contained\" sx={{\r\n    mt:2,\r\n    mx:\"auto\",\r\n    width:\"30%\",\r\n  }} onClick={e=>{if (user?.client.isAuth){\r\n    if (tmpAppeal.typeappeal===\"\"||tmpAppeal.text===\"\"){noDataHandleShow();return;}\r\n    AppealService.AddAppeal(tmpAppeal).then((res)=>{\r\n      if(res){\r\n        handleShow(); \r\n         setTimeout(()=>{navigate(0)},3000) \r\n       \r\n      }\r\n    });\r\n    \r\n  }\r\n  else{setOpen(true)}}}>\r\n  Отправить\r\n  </Button>\r\n</FormControl>\r\n\r\n    </Box>\r\n    <AuthModal open={open} handlerClose={() => setOpen(false)}/>\r\n    <Snackbar open={show} autoHideDuration={3000} onClose={handleClose}>\r\n        <Alert onClose={handleClose} severity=\"success\" sx={{ width: '100%' }}>\r\n          Ваше обращение успешно отправлено.\r\n        </Alert>\r\n      </Snackbar>\r\n      <Snackbar open={noDataShow} autoHideDuration={3000} onClose={noDataHandleClose}>\r\n        <Alert onClose={noDataHandleClose} severity=\"warning\" sx={{ width: '100%' }}>\r\n          Заполните все поля.\r\n        </Alert>\r\n      </Snackbar>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default PsixHome;\r\n"]},"metadata":{},"sourceType":"module"}