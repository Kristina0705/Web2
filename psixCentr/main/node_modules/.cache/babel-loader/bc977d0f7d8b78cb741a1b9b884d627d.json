{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"shouldDisableDate\"];\nimport { useValidation, validateDate } from '@mui/x-date-pickers/internals';\nimport { isRangeValid, parseRangeInputValue } from '../../utils/date-utils';\nexport const validateDateRange = _ref => {\n  let {\n    props,\n    value,\n    adapter\n  } = _ref;\n  const [start, end] = value; // for partial input\n\n  if (start === null || end === null) {\n    return [null, null];\n  }\n\n  const {\n    shouldDisableDate\n  } = props,\n        otherProps = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const dateValidations = [validateDate({\n    adapter,\n    value: start,\n    props: _extends({}, otherProps, {\n      shouldDisableDate: day => !!(shouldDisableDate != null && shouldDisableDate(day, 'start'))\n    })\n  }), validateDate({\n    adapter,\n    value: end,\n    props: _extends({}, otherProps, {\n      shouldDisableDate: day => !!(shouldDisableDate != null && shouldDisableDate(day, 'end'))\n    })\n  })];\n\n  if (dateValidations[0] || dateValidations[1]) {\n    return dateValidations;\n  }\n\n  if (!isRangeValid(adapter.utils, parseRangeInputValue(adapter.utils, value))) {\n    return ['invalidRange', 'invalidRange'];\n  }\n\n  return [null, null];\n};\nexport const isSameDateRangeError = (a, b) => b !== null && a[1] === b[1] && a[0] === b[0];\nexport const useDateRangeValidation = props => {\n  return useValidation(props, validateDateRange, isSameDateRangeError);\n};","map":{"version":3,"sources":["C:/Users/Кристина/Downloads/Telegram Desktop/psixCentr/main/node_modules/@mui/x-date-pickers-pro/internal/hooks/validation/useDateRangeValidation.js"],"names":["_extends","_objectWithoutPropertiesLoose","_excluded","useValidation","validateDate","isRangeValid","parseRangeInputValue","validateDateRange","props","value","adapter","start","end","shouldDisableDate","otherProps","dateValidations","day","utils","isSameDateRangeError","a","b","useDateRangeValidation"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,oCAArB;AACA,OAAOC,6BAAP,MAA0C,yDAA1C;AACA,MAAMC,SAAS,GAAG,CAAC,mBAAD,CAAlB;AACA,SAASC,aAAT,EAAwBC,YAAxB,QAA4C,+BAA5C;AACA,SAASC,YAAT,EAAuBC,oBAAvB,QAAmD,wBAAnD;AACA,OAAO,MAAMC,iBAAiB,GAAG,QAI3B;AAAA,MAJ4B;AAChCC,IAAAA,KADgC;AAEhCC,IAAAA,KAFgC;AAGhCC,IAAAA;AAHgC,GAI5B;AACJ,QAAM,CAACC,KAAD,EAAQC,GAAR,IAAeH,KAArB,CADI,CACwB;;AAE5B,MAAIE,KAAK,KAAK,IAAV,IAAkBC,GAAG,KAAK,IAA9B,EAAoC;AAClC,WAAO,CAAC,IAAD,EAAO,IAAP,CAAP;AACD;;AAED,QAAM;AACJC,IAAAA;AADI,MAEFL,KAFJ;AAAA,QAGMM,UAAU,GAAGb,6BAA6B,CAACO,KAAD,EAAQN,SAAR,CAHhD;;AAKA,QAAMa,eAAe,GAAG,CAACX,YAAY,CAAC;AACpCM,IAAAA,OADoC;AAEpCD,IAAAA,KAAK,EAAEE,KAF6B;AAGpCH,IAAAA,KAAK,EAAER,QAAQ,CAAC,EAAD,EAAKc,UAAL,EAAiB;AAC9BD,MAAAA,iBAAiB,EAAEG,GAAG,IAAI,CAAC,EAAEH,iBAAiB,IAAI,IAArB,IAA6BA,iBAAiB,CAACG,GAAD,EAAM,OAAN,CAAhD;AADG,KAAjB;AAHqB,GAAD,CAAb,EAMpBZ,YAAY,CAAC;AACfM,IAAAA,OADe;AAEfD,IAAAA,KAAK,EAAEG,GAFQ;AAGfJ,IAAAA,KAAK,EAAER,QAAQ,CAAC,EAAD,EAAKc,UAAL,EAAiB;AAC9BD,MAAAA,iBAAiB,EAAEG,GAAG,IAAI,CAAC,EAAEH,iBAAiB,IAAI,IAArB,IAA6BA,iBAAiB,CAACG,GAAD,EAAM,KAAN,CAAhD;AADG,KAAjB;AAHA,GAAD,CANQ,CAAxB;;AAcA,MAAID,eAAe,CAAC,CAAD,CAAf,IAAsBA,eAAe,CAAC,CAAD,CAAzC,EAA8C;AAC5C,WAAOA,eAAP;AACD;;AAED,MAAI,CAACV,YAAY,CAACK,OAAO,CAACO,KAAT,EAAgBX,oBAAoB,CAACI,OAAO,CAACO,KAAT,EAAgBR,KAAhB,CAApC,CAAjB,EAA8E;AAC5E,WAAO,CAAC,cAAD,EAAiB,cAAjB,CAAP;AACD;;AAED,SAAO,CAAC,IAAD,EAAO,IAAP,CAAP;AACD,CAvCM;AAwCP,OAAO,MAAMS,oBAAoB,GAAG,CAACC,CAAD,EAAIC,CAAJ,KAAUA,CAAC,KAAK,IAAN,IAAcD,CAAC,CAAC,CAAD,CAAD,KAASC,CAAC,CAAC,CAAD,CAAxB,IAA+BD,CAAC,CAAC,CAAD,CAAD,KAASC,CAAC,CAAC,CAAD,CAAhF;AACP,OAAO,MAAMC,sBAAsB,GAAGb,KAAK,IAAI;AAC7C,SAAOL,aAAa,CAACK,KAAD,EAAQD,iBAAR,EAA2BW,oBAA3B,CAApB;AACD,CAFM","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"shouldDisableDate\"];\nimport { useValidation, validateDate } from '@mui/x-date-pickers/internals';\nimport { isRangeValid, parseRangeInputValue } from '../../utils/date-utils';\nexport const validateDateRange = ({\n  props,\n  value,\n  adapter\n}) => {\n  const [start, end] = value; // for partial input\n\n  if (start === null || end === null) {\n    return [null, null];\n  }\n\n  const {\n    shouldDisableDate\n  } = props,\n        otherProps = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const dateValidations = [validateDate({\n    adapter,\n    value: start,\n    props: _extends({}, otherProps, {\n      shouldDisableDate: day => !!(shouldDisableDate != null && shouldDisableDate(day, 'start'))\n    })\n  }), validateDate({\n    adapter,\n    value: end,\n    props: _extends({}, otherProps, {\n      shouldDisableDate: day => !!(shouldDisableDate != null && shouldDisableDate(day, 'end'))\n    })\n  })];\n\n  if (dateValidations[0] || dateValidations[1]) {\n    return dateValidations;\n  }\n\n  if (!isRangeValid(adapter.utils, parseRangeInputValue(adapter.utils, value))) {\n    return ['invalidRange', 'invalidRange'];\n  }\n\n  return [null, null];\n};\nexport const isSameDateRangeError = (a, b) => b !== null && a[1] === b[1] && a[0] === b[0];\nexport const useDateRangeValidation = props => {\n  return useValidation(props, validateDateRange, isSameDateRangeError);\n};"]},"metadata":{},"sourceType":"module"}