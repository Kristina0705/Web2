{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"currentlySelectingRangeEnd\", \"disableOpenPicker\", \"endText\", \"onBlur\", \"onChange\", \"open\", \"openPicker\", \"rawValue\", \"rawValue\", \"readOnly\", \"renderInput\", \"setCurrentlySelectingRangeEnd\", \"startText\", \"TextFieldProps\", \"validationError\", \"className\", \"mobile\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { styled, useThemeProps } from '@mui/material/styles';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport { useUtils, executeInTheNextEventLoopTick, useMaskedInput, onSpaceOrEnter } from '@mui/x-date-pickers/internals';\nimport { getDateRangePickerInputUtilityClass } from './dateRangePickerInputClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getDateRangePickerInputUtilityClass, classes);\n};\n\nconst DateRangePickerInputRoot = styled('div', {\n  name: 'MuiDateRangePickerInput',\n  slot: 'Root',\n  overridesResolver: (_, styles) => styles.root\n})(_ref => {\n  let {\n    theme\n  } = _ref;\n  return {\n    display: 'flex',\n    alignItems: 'baseline',\n    [theme.breakpoints.down('xs')]: {\n      flexDirection: 'column',\n      alignItems: 'center'\n    }\n  };\n});\n/**\n * @ignore - internal component.\n */\n\nexport const DateRangePickerInput = /*#__PURE__*/React.forwardRef(function DateRangePickerInput(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiDateRangePickerInput'\n  });\n\n  const {\n    currentlySelectingRangeEnd,\n    disableOpenPicker,\n    endText,\n    onBlur,\n    onChange,\n    open,\n    openPicker,\n    rawValue: [start, end],\n    readOnly,\n    renderInput,\n    setCurrentlySelectingRangeEnd,\n    startText,\n    TextFieldProps,\n    validationError: [startValidationError, endValidationError],\n    className,\n    mobile\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const utils = useUtils();\n  const startRef = React.useRef(null);\n  const endRef = React.useRef(null);\n  const classes = useUtilityClasses(props);\n  React.useEffect(() => {\n    if (!open) {\n      return;\n    }\n\n    if (currentlySelectingRangeEnd === 'start') {\n      var _startRef$current;\n\n      (_startRef$current = startRef.current) == null ? void 0 : _startRef$current.focus();\n    } else if (currentlySelectingRangeEnd === 'end') {\n      var _endRef$current;\n\n      (_endRef$current = endRef.current) == null ? void 0 : _endRef$current.focus();\n    }\n  }, [currentlySelectingRangeEnd, open]); // TODO: rethink this approach. We do not need to wait for calendar to be updated to rerender input (looks like freezing)\n  // TODO: so simply break 1 react's commit phase in 2 (first for input and second for calendars) by executing onChange in the next tick\n\n  const lazyHandleChangeCallback = React.useCallback(function () {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return executeInTheNextEventLoopTick(() => onChange(...args));\n  }, [onChange]);\n\n  const handleStartChange = (date, inputString) => {\n    lazyHandleChangeCallback([date, utils.date(end)], inputString);\n  };\n\n  const handleEndChange = (date, inputString) => {\n    lazyHandleChangeCallback([utils.date(start), date], inputString);\n  };\n\n  const openRangeStartSelection = event => {\n    event.stopPropagation();\n\n    if (setCurrentlySelectingRangeEnd) {\n      setCurrentlySelectingRangeEnd('start');\n    }\n\n    if (!readOnly && !disableOpenPicker) {\n      openPicker();\n    }\n  };\n\n  const openRangeEndSelection = event => {\n    event.stopPropagation();\n\n    if (setCurrentlySelectingRangeEnd) {\n      setCurrentlySelectingRangeEnd('end');\n    }\n\n    if (!readOnly && !disableOpenPicker) {\n      openPicker();\n    }\n  };\n\n  const focusOnRangeEnd = () => {\n    if (open && setCurrentlySelectingRangeEnd) {\n      setCurrentlySelectingRangeEnd('end');\n    }\n  };\n\n  const focusOnRangeStart = () => {\n    if (open && setCurrentlySelectingRangeEnd) {\n      setCurrentlySelectingRangeEnd('start');\n    }\n  };\n\n  const startInputProps = useMaskedInput(_extends({}, other, {\n    readOnly,\n    rawValue: start,\n    onChange: handleStartChange,\n    label: startText,\n    validationError: startValidationError !== null,\n    TextFieldProps: _extends({}, TextFieldProps, {\n      ref: startRef,\n      focused: open ? currentlySelectingRangeEnd === 'start' : undefined\n    }, !readOnly && !other.disabled && {\n      onClick: openRangeStartSelection\n    }),\n    inputProps: {\n      onClick: openRangeStartSelection,\n      onKeyDown: onSpaceOrEnter(openRangeStartSelection),\n      onFocus: focusOnRangeStart,\n      readOnly: mobile\n    }\n  }));\n  const endInputProps = useMaskedInput(_extends({}, other, {\n    readOnly,\n    label: endText,\n    rawValue: end,\n    onChange: handleEndChange,\n    validationError: endValidationError !== null,\n    TextFieldProps: _extends({}, TextFieldProps, {\n      ref: endRef,\n      focused: open ? currentlySelectingRangeEnd === 'end' : undefined\n    }, !readOnly && !other.disabled && {\n      onClick: openRangeEndSelection\n    }),\n    inputProps: {\n      onClick: openRangeEndSelection,\n      onKeyDown: onSpaceOrEnter(openRangeEndSelection),\n      onFocus: focusOnRangeEnd,\n      readOnly: mobile\n    }\n  }));\n  return /*#__PURE__*/_jsx(DateRangePickerInputRoot, {\n    onBlur: onBlur,\n    ref: ref,\n    className: clsx(classes.root, className),\n    children: renderInput(startInputProps, endInputProps)\n  });\n});","map":{"version":3,"sources":["C:/Users/Кристина/Downloads/Telegram Desktop/psixCentr/main/node_modules/@mui/x-date-pickers-pro/DateRangePicker/DateRangePickerInput.js"],"names":["_extends","_objectWithoutPropertiesLoose","_excluded","React","clsx","styled","useThemeProps","unstable_composeClasses","composeClasses","useUtils","executeInTheNextEventLoopTick","useMaskedInput","onSpaceOrEnter","getDateRangePickerInputUtilityClass","jsx","_jsx","useUtilityClasses","ownerState","classes","slots","root","DateRangePickerInputRoot","name","slot","overridesResolver","_","styles","theme","display","alignItems","breakpoints","down","flexDirection","DateRangePickerInput","forwardRef","inProps","ref","props","currentlySelectingRangeEnd","disableOpenPicker","endText","onBlur","onChange","open","openPicker","rawValue","start","end","readOnly","renderInput","setCurrentlySelectingRangeEnd","startText","TextFieldProps","validationError","startValidationError","endValidationError","className","mobile","other","utils","startRef","useRef","endRef","useEffect","_startRef$current","current","focus","_endRef$current","lazyHandleChangeCallback","useCallback","args","handleStartChange","date","inputString","handleEndChange","openRangeStartSelection","event","stopPropagation","openRangeEndSelection","focusOnRangeEnd","focusOnRangeStart","startInputProps","label","focused","undefined","disabled","onClick","inputProps","onKeyDown","onFocus","endInputProps","children"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"currentlySelectingRangeEnd\", \"disableOpenPicker\", \"endText\", \"onBlur\", \"onChange\", \"open\", \"openPicker\", \"rawValue\", \"rawValue\", \"readOnly\", \"renderInput\", \"setCurrentlySelectingRangeEnd\", \"startText\", \"TextFieldProps\", \"validationError\", \"className\", \"mobile\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { styled, useThemeProps } from '@mui/material/styles';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport { useUtils, executeInTheNextEventLoopTick, useMaskedInput, onSpaceOrEnter } from '@mui/x-date-pickers/internals';\nimport { getDateRangePickerInputUtilityClass } from './dateRangePickerInputClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getDateRangePickerInputUtilityClass, classes);\n};\n\nconst DateRangePickerInputRoot = styled('div', {\n  name: 'MuiDateRangePickerInput',\n  slot: 'Root',\n  overridesResolver: (_, styles) => styles.root\n})(({\n  theme\n}) => ({\n  display: 'flex',\n  alignItems: 'baseline',\n  [theme.breakpoints.down('xs')]: {\n    flexDirection: 'column',\n    alignItems: 'center'\n  }\n}));\n\n/**\n * @ignore - internal component.\n */\nexport const DateRangePickerInput = /*#__PURE__*/React.forwardRef(function DateRangePickerInput(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiDateRangePickerInput'\n  });\n\n  const {\n    currentlySelectingRangeEnd,\n    disableOpenPicker,\n    endText,\n    onBlur,\n    onChange,\n    open,\n    openPicker,\n    rawValue: [start, end],\n    readOnly,\n    renderInput,\n    setCurrentlySelectingRangeEnd,\n    startText,\n    TextFieldProps,\n    validationError: [startValidationError, endValidationError],\n    className,\n    mobile\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const utils = useUtils();\n  const startRef = React.useRef(null);\n  const endRef = React.useRef(null);\n  const classes = useUtilityClasses(props);\n  React.useEffect(() => {\n    if (!open) {\n      return;\n    }\n\n    if (currentlySelectingRangeEnd === 'start') {\n      var _startRef$current;\n\n      (_startRef$current = startRef.current) == null ? void 0 : _startRef$current.focus();\n    } else if (currentlySelectingRangeEnd === 'end') {\n      var _endRef$current;\n\n      (_endRef$current = endRef.current) == null ? void 0 : _endRef$current.focus();\n    }\n  }, [currentlySelectingRangeEnd, open]); // TODO: rethink this approach. We do not need to wait for calendar to be updated to rerender input (looks like freezing)\n  // TODO: so simply break 1 react's commit phase in 2 (first for input and second for calendars) by executing onChange in the next tick\n\n  const lazyHandleChangeCallback = React.useCallback((...args) => executeInTheNextEventLoopTick(() => onChange(...args)), [onChange]);\n\n  const handleStartChange = (date, inputString) => {\n    lazyHandleChangeCallback([date, utils.date(end)], inputString);\n  };\n\n  const handleEndChange = (date, inputString) => {\n    lazyHandleChangeCallback([utils.date(start), date], inputString);\n  };\n\n  const openRangeStartSelection = event => {\n    event.stopPropagation();\n\n    if (setCurrentlySelectingRangeEnd) {\n      setCurrentlySelectingRangeEnd('start');\n    }\n\n    if (!readOnly && !disableOpenPicker) {\n      openPicker();\n    }\n  };\n\n  const openRangeEndSelection = event => {\n    event.stopPropagation();\n\n    if (setCurrentlySelectingRangeEnd) {\n      setCurrentlySelectingRangeEnd('end');\n    }\n\n    if (!readOnly && !disableOpenPicker) {\n      openPicker();\n    }\n  };\n\n  const focusOnRangeEnd = () => {\n    if (open && setCurrentlySelectingRangeEnd) {\n      setCurrentlySelectingRangeEnd('end');\n    }\n  };\n\n  const focusOnRangeStart = () => {\n    if (open && setCurrentlySelectingRangeEnd) {\n      setCurrentlySelectingRangeEnd('start');\n    }\n  };\n\n  const startInputProps = useMaskedInput(_extends({}, other, {\n    readOnly,\n    rawValue: start,\n    onChange: handleStartChange,\n    label: startText,\n    validationError: startValidationError !== null,\n    TextFieldProps: _extends({}, TextFieldProps, {\n      ref: startRef,\n      focused: open ? currentlySelectingRangeEnd === 'start' : undefined\n    }, !readOnly && !other.disabled && {\n      onClick: openRangeStartSelection\n    }),\n    inputProps: {\n      onClick: openRangeStartSelection,\n      onKeyDown: onSpaceOrEnter(openRangeStartSelection),\n      onFocus: focusOnRangeStart,\n      readOnly: mobile\n    }\n  }));\n  const endInputProps = useMaskedInput(_extends({}, other, {\n    readOnly,\n    label: endText,\n    rawValue: end,\n    onChange: handleEndChange,\n    validationError: endValidationError !== null,\n    TextFieldProps: _extends({}, TextFieldProps, {\n      ref: endRef,\n      focused: open ? currentlySelectingRangeEnd === 'end' : undefined\n    }, !readOnly && !other.disabled && {\n      onClick: openRangeEndSelection\n    }),\n    inputProps: {\n      onClick: openRangeEndSelection,\n      onKeyDown: onSpaceOrEnter(openRangeEndSelection),\n      onFocus: focusOnRangeEnd,\n      readOnly: mobile\n    }\n  }));\n  return /*#__PURE__*/_jsx(DateRangePickerInputRoot, {\n    onBlur: onBlur,\n    ref: ref,\n    className: clsx(classes.root, className),\n    children: renderInput(startInputProps, endInputProps)\n  });\n});"]},"metadata":{},"sourceType":"module"}