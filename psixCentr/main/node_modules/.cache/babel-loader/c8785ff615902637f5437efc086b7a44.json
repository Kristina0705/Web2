{"ast":null,"code":"import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"day\", \"outsideCurrentMonth\", \"isEndOfHighlighting\", \"isEndOfPreviewing\", \"isHighlighting\", \"isPreviewing\", \"isStartOfHighlighting\", \"isStartOfPreviewing\", \"selected\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { useLicenseVerifier } from '@mui/x-license-pro';\nimport { alpha, styled, useThemeProps } from '@mui/material/styles';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport { DAY_MARGIN, useUtils, areDayPropsEqual } from '@mui/x-date-pickers/internals';\nimport { PickersDay } from '@mui/x-date-pickers/PickersDay';\nimport { getDateRangePickerDayUtilityClass, dateRangePickerDayClasses } from './dateRangePickerDayClasses';\nimport { getReleaseInfo } from '../internal/utils/releaseInfo';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst releaseInfo = getReleaseInfo();\n\nconst useUtilityClasses = ownerState => {\n  const {\n    isHighlighting,\n    outsideCurrentMonth,\n    isStartOfHighlighting,\n    isStartOfMonth,\n    isEndOfHighlighting,\n    isEndOfMonth,\n    isPreviewing,\n    isStartOfPreviewing,\n    isEndOfPreviewing,\n    selected,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', isHighlighting && !outsideCurrentMonth && 'rangeIntervalDayHighlight', (isStartOfHighlighting || isStartOfMonth) && 'rangeIntervalDayHighlightStart', (isEndOfHighlighting || isEndOfMonth) && 'rangeIntervalDayHighlightEnd'],\n    rangeIntervalPreview: ['rangeIntervalPreview', isPreviewing && !outsideCurrentMonth && 'rangeIntervalDayPreview', (isStartOfPreviewing || isStartOfMonth) && 'rangeIntervalDayPreviewStart', (isEndOfPreviewing || isEndOfMonth) && 'rangeIntervalDayPreviewEnd'],\n    day: ['day', !selected && 'notSelectedDate', !isHighlighting && 'dayOutsideRangeInterval', !selected && isHighlighting && 'dayInsideRangeInterval']\n  };\n  return composeClasses(slots, getDateRangePickerDayUtilityClass, classes);\n};\n\nconst endBorderStyle = {\n  borderTopRightRadius: '50%',\n  borderBottomRightRadius: '50%'\n};\nconst startBorderStyle = {\n  borderTopLeftRadius: '50%',\n  borderBottomLeftRadius: '50%'\n};\nconst DateRangePickerDayRoot = styled('div', {\n  name: 'MuiDateRangePickerDay',\n  slot: 'Root',\n  overridesResolver: (_, styles) => [{\n    [`&.${dateRangePickerDayClasses.rangeIntervalDayHighlight}`]: styles.rangeIntervalDayHighlight\n  }, {\n    [`&.${dateRangePickerDayClasses.rangeIntervalDayHighlightStart}`]: styles.rangeIntervalDayHighlightStart\n  }, {\n    [`&.${dateRangePickerDayClasses.rangeIntervalDayHighlightEnd}`]: styles.rangeIntervalDayHighlightEnd\n  }, styles.root]\n})(_ref => {\n  let {\n    theme,\n    ownerState\n  } = _ref;\n  return _extends({\n    [`&:first-of-type .${dateRangePickerDayClasses.rangeIntervalDayPreview}`]: _extends({}, startBorderStyle, {\n      borderLeftColor: theme.palette.divider\n    }),\n    [`&:last-of-type .${dateRangePickerDayClasses.rangeIntervalDayPreview}`]: _extends({}, endBorderStyle, {\n      borderRightColor: theme.palette.divider\n    })\n  }, ownerState.isHighlighting && !ownerState.outsideCurrentMonth && {\n    borderRadius: 0,\n    color: theme.palette.primary.contrastText,\n    backgroundColor: alpha(theme.palette.primary.light, 0.6),\n    '&:first-of-type': startBorderStyle,\n    '&:last-of-type': endBorderStyle\n  }, (ownerState.isStartOfHighlighting || ownerState.isStartOfMonth) && _extends({}, startBorderStyle, {\n    paddingLeft: 0,\n    marginLeft: DAY_MARGIN / 2\n  }), (ownerState.isEndOfHighlighting || ownerState.isEndOfMonth) && _extends({}, endBorderStyle, {\n    paddingRight: 0,\n    marginRight: DAY_MARGIN / 2\n  }));\n});\nDateRangePickerDayRoot.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  ownerState: PropTypes.object.isRequired\n};\nconst DateRangePickerDayRangeIntervalPreview = styled('div', {\n  name: 'MuiDateRangePickerDay',\n  slot: 'RangeIntervalPreview',\n  overridesResolver: (_, styles) => [{\n    [`&.${dateRangePickerDayClasses.rangeIntervalDayPreview}`]: styles.rangeIntervalDayPreview\n  }, {\n    [`&.${dateRangePickerDayClasses.rangeIntervalDayPreviewStart}`]: styles.rangeIntervalDayPreviewStart\n  }, {\n    [`&.${dateRangePickerDayClasses.rangeIntervalDayPreviewEnd}`]: styles.rangeIntervalDayPreviewEnd\n  }, styles.rangeIntervalPreview]\n})(_ref2 => {\n  let {\n    theme,\n    ownerState\n  } = _ref2;\n  return _extends({\n    // replace default day component margin with transparent border to avoid jumping on preview\n    border: '2px solid transparent'\n  }, ownerState.isPreviewing && !ownerState.outsideCurrentMonth && _extends({\n    borderRadius: 0,\n    border: `2px dashed ${theme.palette.divider}`,\n    borderLeftColor: 'transparent',\n    borderRightColor: 'transparent'\n  }, (ownerState.isStartOfPreviewing || ownerState.isStartOfMonth) && _extends({\n    borderLeftColor: theme.palette.divider\n  }, startBorderStyle), (ownerState.isEndOfPreviewing || ownerState.isEndOfMonth) && _extends({\n    borderRightColor: theme.palette.divider\n  }, endBorderStyle)));\n});\nDateRangePickerDayRangeIntervalPreview.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  ownerState: PropTypes.object.isRequired\n};\nconst DateRangePickerDayDay = styled(PickersDay, {\n  name: 'MuiDateRangePickerDay',\n  slot: 'Day',\n  overridesResolver: (_, styles) => [{\n    [`&.${dateRangePickerDayClasses.dayInsideRangeInterval}`]: styles.dayInsideRangeInterval\n  }, {\n    [`&.${dateRangePickerDayClasses.dayOutsideRangeInterval}`]: styles.dayOutsideRangeInterval\n  }, {\n    [`&.${dateRangePickerDayClasses.notSelectedDate}`]: styles.notSelectedDate\n  }, styles.day]\n})(_ref3 => {\n  let {\n    theme,\n    ownerState\n  } = _ref3;\n  return _extends({\n    // Required to overlap preview border\n    transform: 'scale(1.1)',\n    '& > *': {\n      transform: 'scale(0.9)'\n    }\n  }, !ownerState.selected && {\n    backgroundColor: 'transparent'\n  }, !ownerState.isHighlighting && {\n    '&:hover': {\n      border: `1px solid ${theme.palette.grey[500]}`\n    }\n  }, !ownerState.selected && ownerState.isHighlighting && {\n    color: theme.palette.getContrastText(alpha(theme.palette.primary.light, 0.6))\n  });\n});\nconst DateRangePickerDayRaw = /*#__PURE__*/React.forwardRef(function DateRangePickerDay(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiDateRangePickerDay'\n  });\n\n  const {\n    className,\n    day,\n    outsideCurrentMonth,\n    isHighlighting,\n    isPreviewing,\n    selected = false\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  useLicenseVerifier('x-date-pickers-pro', releaseInfo);\n  const utils = useUtils();\n  const isEndOfMonth = utils.isSameDay(day, utils.endOfMonth(day));\n  const isStartOfMonth = utils.isSameDay(day, utils.startOfMonth(day));\n  const shouldRenderHighlight = isHighlighting && !outsideCurrentMonth;\n  const shouldRenderPreview = isPreviewing && !outsideCurrentMonth;\n\n  const ownerState = _extends({}, props, {\n    selected,\n    isStartOfMonth,\n    isEndOfMonth\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(DateRangePickerDayRoot, {\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    children: /*#__PURE__*/_jsx(DateRangePickerDayRangeIntervalPreview, {\n      className: classes.rangeIntervalPreview,\n      ownerState: ownerState,\n      children: /*#__PURE__*/_jsx(DateRangePickerDayDay, _extends({}, other, {\n        ref: ref,\n        disableMargin: true,\n        day: day,\n        selected: selected,\n        outsideCurrentMonth: outsideCurrentMonth,\n        className: classes.day,\n        ownerState: ownerState\n      }))\n    })\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? DateRangePickerDayRaw.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * The date to show.\n   */\n  day: PropTypes.any.isRequired,\n\n  /**\n   * If `true`, renders as disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, today's date is rendering without highlighting with circle.\n   * @default false\n   */\n  disableHighlightToday: PropTypes.bool,\n\n  /**\n   * If `true`, days are rendering without margin. Useful for displaying linked range of days.\n   * @default false\n   */\n  disableMargin: PropTypes.bool,\n  isAnimating: PropTypes.bool,\n\n  /**\n   * Set to `true` if the `day` is the end of a highlighted date range.\n   */\n  isEndOfHighlighting: PropTypes.bool.isRequired,\n\n  /**\n   * Set to `true` if the `day` is the start of a highlighted date range.\n   */\n  isEndOfPreviewing: PropTypes.bool.isRequired,\n\n  /**\n   * Set to `true` if the `day` is in a highlighted date range.\n   */\n  isHighlighting: PropTypes.bool.isRequired,\n\n  /**\n   * Set to `true` if the `day` is in a preview date range.\n   */\n  isPreviewing: PropTypes.bool.isRequired,\n\n  /**\n   * Set to `true` if the `day` is the start of a highlighted date range.\n   */\n  isStartOfHighlighting: PropTypes.bool.isRequired,\n\n  /**\n   * Set to `true` if the `day` is the end of a highlighted date range.\n   */\n  isStartOfPreviewing: PropTypes.bool.isRequired,\n  onDaySelect: PropTypes.func.isRequired,\n\n  /**\n   * If `true`, day is outside of month and will be hidden.\n   */\n  outsideCurrentMonth: PropTypes.bool.isRequired,\n\n  /**\n   * If `true`, renders as selected.\n   * @default false\n   */\n  selected: PropTypes.bool,\n\n  /**\n   * If `true`, days that have `outsideCurrentMonth={true}` are displayed.\n   * @default false\n   */\n  showDaysOutsideCurrentMonth: PropTypes.bool,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * If `true`, renders as today date.\n   * @default false\n   */\n  today: PropTypes.bool\n} : void 0;\n\nconst propsAreEqual = (prevProps, nextProps) => {\n  return prevProps.isHighlighting === nextProps.isHighlighting && prevProps.isEndOfHighlighting === nextProps.isEndOfHighlighting && prevProps.isStartOfHighlighting === nextProps.isStartOfHighlighting && prevProps.isPreviewing === nextProps.isPreviewing && prevProps.isEndOfPreviewing === nextProps.isEndOfPreviewing && prevProps.isStartOfPreviewing === nextProps.isStartOfPreviewing && areDayPropsEqual(prevProps, nextProps);\n};\n/**\n *\n * Demos:\n *\n * - [Date Range Picker](https://mui.com/x/react-date-pickers/date-range-picker/)\n *\n * API:\n *\n * - [DateRangePickerDay API](https://mui.com/x/api/date-pickers/date-range-picker-day/)\n */\n\n\nexport const DateRangePickerDay = /*#__PURE__*/React.memo(DateRangePickerDayRaw, propsAreEqual);","map":{"version":3,"sources":["C:/Users/Кристина/Downloads/Telegram Desktop/psixCentr/main/node_modules/@mui/x-date-pickers-pro/DateRangePickerDay/DateRangePickerDay.js"],"names":["_objectWithoutPropertiesLoose","_extends","_excluded","React","PropTypes","clsx","useLicenseVerifier","alpha","styled","useThemeProps","unstable_composeClasses","composeClasses","DAY_MARGIN","useUtils","areDayPropsEqual","PickersDay","getDateRangePickerDayUtilityClass","dateRangePickerDayClasses","getReleaseInfo","jsx","_jsx","releaseInfo","useUtilityClasses","ownerState","isHighlighting","outsideCurrentMonth","isStartOfHighlighting","isStartOfMonth","isEndOfHighlighting","isEndOfMonth","isPreviewing","isStartOfPreviewing","isEndOfPreviewing","selected","classes","slots","root","rangeIntervalPreview","day","endBorderStyle","borderTopRightRadius","borderBottomRightRadius","startBorderStyle","borderTopLeftRadius","borderBottomLeftRadius","DateRangePickerDayRoot","name","slot","overridesResolver","_","styles","rangeIntervalDayHighlight","rangeIntervalDayHighlightStart","rangeIntervalDayHighlightEnd","theme","rangeIntervalDayPreview","borderLeftColor","palette","divider","borderRightColor","borderRadius","color","primary","contrastText","backgroundColor","light","paddingLeft","marginLeft","paddingRight","marginRight","propTypes","object","isRequired","DateRangePickerDayRangeIntervalPreview","rangeIntervalDayPreviewStart","rangeIntervalDayPreviewEnd","border","DateRangePickerDayDay","dayInsideRangeInterval","dayOutsideRangeInterval","notSelectedDate","transform","grey","getContrastText","DateRangePickerDayRaw","forwardRef","DateRangePickerDay","inProps","ref","props","className","other","utils","isSameDay","endOfMonth","startOfMonth","shouldRenderHighlight","shouldRenderPreview","children","disableMargin","process","env","NODE_ENV","any","disabled","bool","disableHighlightToday","isAnimating","onDaySelect","func","showDaysOutsideCurrentMonth","sx","oneOfType","arrayOf","today","propsAreEqual","prevProps","nextProps","memo"],"mappings":"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","sourcesContent":["import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"day\", \"outsideCurrentMonth\", \"isEndOfHighlighting\", \"isEndOfPreviewing\", \"isHighlighting\", \"isPreviewing\", \"isStartOfHighlighting\", \"isStartOfPreviewing\", \"selected\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { useLicenseVerifier } from '@mui/x-license-pro';\nimport { alpha, styled, useThemeProps } from '@mui/material/styles';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport { DAY_MARGIN, useUtils, areDayPropsEqual } from '@mui/x-date-pickers/internals';\nimport { PickersDay } from '@mui/x-date-pickers/PickersDay';\nimport { getDateRangePickerDayUtilityClass, dateRangePickerDayClasses } from './dateRangePickerDayClasses';\nimport { getReleaseInfo } from '../internal/utils/releaseInfo';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst releaseInfo = getReleaseInfo();\n\nconst useUtilityClasses = ownerState => {\n  const {\n    isHighlighting,\n    outsideCurrentMonth,\n    isStartOfHighlighting,\n    isStartOfMonth,\n    isEndOfHighlighting,\n    isEndOfMonth,\n    isPreviewing,\n    isStartOfPreviewing,\n    isEndOfPreviewing,\n    selected,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', isHighlighting && !outsideCurrentMonth && 'rangeIntervalDayHighlight', (isStartOfHighlighting || isStartOfMonth) && 'rangeIntervalDayHighlightStart', (isEndOfHighlighting || isEndOfMonth) && 'rangeIntervalDayHighlightEnd'],\n    rangeIntervalPreview: ['rangeIntervalPreview', isPreviewing && !outsideCurrentMonth && 'rangeIntervalDayPreview', (isStartOfPreviewing || isStartOfMonth) && 'rangeIntervalDayPreviewStart', (isEndOfPreviewing || isEndOfMonth) && 'rangeIntervalDayPreviewEnd'],\n    day: ['day', !selected && 'notSelectedDate', !isHighlighting && 'dayOutsideRangeInterval', !selected && isHighlighting && 'dayInsideRangeInterval']\n  };\n  return composeClasses(slots, getDateRangePickerDayUtilityClass, classes);\n};\n\nconst endBorderStyle = {\n  borderTopRightRadius: '50%',\n  borderBottomRightRadius: '50%'\n};\nconst startBorderStyle = {\n  borderTopLeftRadius: '50%',\n  borderBottomLeftRadius: '50%'\n};\nconst DateRangePickerDayRoot = styled('div', {\n  name: 'MuiDateRangePickerDay',\n  slot: 'Root',\n  overridesResolver: (_, styles) => [{\n    [`&.${dateRangePickerDayClasses.rangeIntervalDayHighlight}`]: styles.rangeIntervalDayHighlight\n  }, {\n    [`&.${dateRangePickerDayClasses.rangeIntervalDayHighlightStart}`]: styles.rangeIntervalDayHighlightStart\n  }, {\n    [`&.${dateRangePickerDayClasses.rangeIntervalDayHighlightEnd}`]: styles.rangeIntervalDayHighlightEnd\n  }, styles.root]\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  [`&:first-of-type .${dateRangePickerDayClasses.rangeIntervalDayPreview}`]: _extends({}, startBorderStyle, {\n    borderLeftColor: theme.palette.divider\n  }),\n  [`&:last-of-type .${dateRangePickerDayClasses.rangeIntervalDayPreview}`]: _extends({}, endBorderStyle, {\n    borderRightColor: theme.palette.divider\n  })\n}, ownerState.isHighlighting && !ownerState.outsideCurrentMonth && {\n  borderRadius: 0,\n  color: theme.palette.primary.contrastText,\n  backgroundColor: alpha(theme.palette.primary.light, 0.6),\n  '&:first-of-type': startBorderStyle,\n  '&:last-of-type': endBorderStyle\n}, (ownerState.isStartOfHighlighting || ownerState.isStartOfMonth) && _extends({}, startBorderStyle, {\n  paddingLeft: 0,\n  marginLeft: DAY_MARGIN / 2\n}), (ownerState.isEndOfHighlighting || ownerState.isEndOfMonth) && _extends({}, endBorderStyle, {\n  paddingRight: 0,\n  marginRight: DAY_MARGIN / 2\n})));\nDateRangePickerDayRoot.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  ownerState: PropTypes.object.isRequired\n};\nconst DateRangePickerDayRangeIntervalPreview = styled('div', {\n  name: 'MuiDateRangePickerDay',\n  slot: 'RangeIntervalPreview',\n  overridesResolver: (_, styles) => [{\n    [`&.${dateRangePickerDayClasses.rangeIntervalDayPreview}`]: styles.rangeIntervalDayPreview\n  }, {\n    [`&.${dateRangePickerDayClasses.rangeIntervalDayPreviewStart}`]: styles.rangeIntervalDayPreviewStart\n  }, {\n    [`&.${dateRangePickerDayClasses.rangeIntervalDayPreviewEnd}`]: styles.rangeIntervalDayPreviewEnd\n  }, styles.rangeIntervalPreview]\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  // replace default day component margin with transparent border to avoid jumping on preview\n  border: '2px solid transparent'\n}, ownerState.isPreviewing && !ownerState.outsideCurrentMonth && _extends({\n  borderRadius: 0,\n  border: `2px dashed ${theme.palette.divider}`,\n  borderLeftColor: 'transparent',\n  borderRightColor: 'transparent'\n}, (ownerState.isStartOfPreviewing || ownerState.isStartOfMonth) && _extends({\n  borderLeftColor: theme.palette.divider\n}, startBorderStyle), (ownerState.isEndOfPreviewing || ownerState.isEndOfMonth) && _extends({\n  borderRightColor: theme.palette.divider\n}, endBorderStyle))));\nDateRangePickerDayRangeIntervalPreview.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  ownerState: PropTypes.object.isRequired\n};\nconst DateRangePickerDayDay = styled(PickersDay, {\n  name: 'MuiDateRangePickerDay',\n  slot: 'Day',\n  overridesResolver: (_, styles) => [{\n    [`&.${dateRangePickerDayClasses.dayInsideRangeInterval}`]: styles.dayInsideRangeInterval\n  }, {\n    [`&.${dateRangePickerDayClasses.dayOutsideRangeInterval}`]: styles.dayOutsideRangeInterval\n  }, {\n    [`&.${dateRangePickerDayClasses.notSelectedDate}`]: styles.notSelectedDate\n  }, styles.day]\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  // Required to overlap preview border\n  transform: 'scale(1.1)',\n  '& > *': {\n    transform: 'scale(0.9)'\n  }\n}, !ownerState.selected && {\n  backgroundColor: 'transparent'\n}, !ownerState.isHighlighting && {\n  '&:hover': {\n    border: `1px solid ${theme.palette.grey[500]}`\n  }\n}, !ownerState.selected && ownerState.isHighlighting && {\n  color: theme.palette.getContrastText(alpha(theme.palette.primary.light, 0.6))\n}));\nconst DateRangePickerDayRaw = /*#__PURE__*/React.forwardRef(function DateRangePickerDay(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiDateRangePickerDay'\n  });\n\n  const {\n    className,\n    day,\n    outsideCurrentMonth,\n    isHighlighting,\n    isPreviewing,\n    selected = false\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  useLicenseVerifier('x-date-pickers-pro', releaseInfo);\n  const utils = useUtils();\n  const isEndOfMonth = utils.isSameDay(day, utils.endOfMonth(day));\n  const isStartOfMonth = utils.isSameDay(day, utils.startOfMonth(day));\n  const shouldRenderHighlight = isHighlighting && !outsideCurrentMonth;\n  const shouldRenderPreview = isPreviewing && !outsideCurrentMonth;\n\n  const ownerState = _extends({}, props, {\n    selected,\n    isStartOfMonth,\n    isEndOfMonth\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(DateRangePickerDayRoot, {\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    children: /*#__PURE__*/_jsx(DateRangePickerDayRangeIntervalPreview, {\n      className: classes.rangeIntervalPreview,\n      ownerState: ownerState,\n      children: /*#__PURE__*/_jsx(DateRangePickerDayDay, _extends({}, other, {\n        ref: ref,\n        disableMargin: true,\n        day: day,\n        selected: selected,\n        outsideCurrentMonth: outsideCurrentMonth,\n        className: classes.day,\n        ownerState: ownerState\n      }))\n    })\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? DateRangePickerDayRaw.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * The date to show.\n   */\n  day: PropTypes.any.isRequired,\n\n  /**\n   * If `true`, renders as disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, today's date is rendering without highlighting with circle.\n   * @default false\n   */\n  disableHighlightToday: PropTypes.bool,\n\n  /**\n   * If `true`, days are rendering without margin. Useful for displaying linked range of days.\n   * @default false\n   */\n  disableMargin: PropTypes.bool,\n  isAnimating: PropTypes.bool,\n\n  /**\n   * Set to `true` if the `day` is the end of a highlighted date range.\n   */\n  isEndOfHighlighting: PropTypes.bool.isRequired,\n\n  /**\n   * Set to `true` if the `day` is the start of a highlighted date range.\n   */\n  isEndOfPreviewing: PropTypes.bool.isRequired,\n\n  /**\n   * Set to `true` if the `day` is in a highlighted date range.\n   */\n  isHighlighting: PropTypes.bool.isRequired,\n\n  /**\n   * Set to `true` if the `day` is in a preview date range.\n   */\n  isPreviewing: PropTypes.bool.isRequired,\n\n  /**\n   * Set to `true` if the `day` is the start of a highlighted date range.\n   */\n  isStartOfHighlighting: PropTypes.bool.isRequired,\n\n  /**\n   * Set to `true` if the `day` is the end of a highlighted date range.\n   */\n  isStartOfPreviewing: PropTypes.bool.isRequired,\n  onDaySelect: PropTypes.func.isRequired,\n\n  /**\n   * If `true`, day is outside of month and will be hidden.\n   */\n  outsideCurrentMonth: PropTypes.bool.isRequired,\n\n  /**\n   * If `true`, renders as selected.\n   * @default false\n   */\n  selected: PropTypes.bool,\n\n  /**\n   * If `true`, days that have `outsideCurrentMonth={true}` are displayed.\n   * @default false\n   */\n  showDaysOutsideCurrentMonth: PropTypes.bool,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * If `true`, renders as today date.\n   * @default false\n   */\n  today: PropTypes.bool\n} : void 0;\n\nconst propsAreEqual = (prevProps, nextProps) => {\n  return prevProps.isHighlighting === nextProps.isHighlighting && prevProps.isEndOfHighlighting === nextProps.isEndOfHighlighting && prevProps.isStartOfHighlighting === nextProps.isStartOfHighlighting && prevProps.isPreviewing === nextProps.isPreviewing && prevProps.isEndOfPreviewing === nextProps.isEndOfPreviewing && prevProps.isStartOfPreviewing === nextProps.isStartOfPreviewing && areDayPropsEqual(prevProps, nextProps);\n};\n/**\n *\n * Demos:\n *\n * - [Date Range Picker](https://mui.com/x/react-date-pickers/date-range-picker/)\n *\n * API:\n *\n * - [DateRangePickerDay API](https://mui.com/x/api/date-pickers/date-range-picker-day/)\n */\n\n\nexport const DateRangePickerDay = /*#__PURE__*/React.memo(DateRangePickerDayRaw, propsAreEqual);"]},"metadata":{},"sourceType":"module"}