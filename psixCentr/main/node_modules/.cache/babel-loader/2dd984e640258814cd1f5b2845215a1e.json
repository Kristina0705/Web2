{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u041A\\u0440\\u0438\\u0441\\u0442\\u0438\\u043D\\u0430\\\\Downloads\\\\Telegram Desktop\\\\psixCentr\\\\main\\\\src\\\\components\\\\AuthModal.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Box from '@mui/material/Box';\nimport Modal from '@mui/material/Modal';\nimport Button from '@mui/material/Button';\nimport { TextField, Typography } from '@mui/material';\nimport { useNavigate } from 'react-router-dom';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"../assets/css/index.css\";\nimport Snackbar from '@mui/material/Snackbar';\nimport Alert from '@mui/material/Alert';\nimport RegisterModal from './RegisterModal';\nimport { useDispatch } from \"react-redux\";\nimport AuthService from \"../redux/services/AuthService\";\nimport sha256 from \"sha256\";\nimport { clientActions } from \"../redux/slices/clientslice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst style = {\n  position: 'absolute',\n  top: '50%',\n  left: '50%',\n  transform: 'translate(-50%, -50%)',\n  width: 400,\n  bgcolor: 'background.paper',\n  border: '2px solid #000',\n  boxShadow: 24,\n  p: 4,\n  display: \"flex\",\n  flexDirection: \"column\",\n  alignItems: \"center\"\n};\n\nfunction AuthModal(props) {\n  _s();\n\n  const [open, setOpen] = React.useState(false);\n  const [regOpen, setRegOpen] = React.useState(false);\n\n  const handleRegOpen = () => {\n    handleClose();\n    setRegOpen(true);\n  };\n\n  const handleOpen = () => setOpen(true);\n\n  const navigate = useNavigate();\n\n  const handleClose = () => props.handlerClose();\n\n  const dispatch = useDispatch();\n  const [successShow, setSuccessShow] = useState(false);\n\n  const toggleSuccessShow = () => setSuccessShow(!successShow);\n\n  const [show, setShow] = useState(false);\n\n  const toggleShow = () => setShow(!show);\n\n  const [nullShow, setNullShow] = useState(false);\n\n  const toggleNullShow = () => setNullShow(!nullShow);\n\n  const [values, setValues] = useState({\n    email: '',\n    password: ''\n  });\n\n  const handleChange = prop => event => {\n    setValues({ ...values,\n      [prop]: event.target.value.trim()\n    });\n  };\n\n  const logIn = () => {\n    const data = {\n      email: values.email,\n      password: sha256(values.password)\n    };\n    AuthService.login(data).then(res => {\n      dispatch(res);\n\n      if (res.type === clientActions.loginSuccess.type) {\n        handleClose();\n        setSuccessShow(true);\n      } else {\n        setShow(true);\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Modal, {\n      open: props.open,\n      onClose: handleClose,\n      \"aria-labelledby\": \"modal-modal-title\",\n      \"aria-describedby\": \"modal-modal-description\",\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: style,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          id: \"modal-modal-title\",\n          variant: \"h6\",\n          component: \"h2\",\n          children: \"\\u0410\\u0432\\u0442\\u043E\\u0440\\u0438\\u0437\\u0430\\u0446\\u0438\\u044F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 3\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          type: \"email\",\n          label: \"Email\",\n          onChange: handleChange(\"email\"),\n          sx: {\n            mt: 2,\n            mb: 2\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          label: \"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C\",\n          type: \"password\",\n          onChange: handleChange(\"password\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            mt: 2,\n            mx: \"auto\",\n            display: \"flex\",\n            justifyContent: \"space-between\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            onClick: logIn,\n            sx: {\n              mr: 8\n            },\n            children: \"\\u0412\\u043E\\u0439\\u0442\\u0438\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"text\",\n            sx: {\n              ml: 8\n            },\n            onClick: handleRegOpen,\n            children: \"\\u0420\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0430\\u0446\\u0438\\u044F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 3\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(RegisterModal, {\n      regOpen: regOpen,\n      regHandlerClose: () => setRegOpen(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n      open: show,\n      autoHideDuration: 5000,\n      onClose: toggleShow,\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        onClose: toggleShow,\n        severity: \"error\",\n        sx: {\n          width: '100%'\n        },\n        children: \"\\u041D\\u0435\\u0432\\u0435\\u0440\\u043D\\u044B\\u0439 \\u043B\\u043E\\u0433\\u0438\\u043D \\u0438\\u043B\\u0438 \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n      open: successShow,\n      autoHideDuration: 5000,\n      onClose: toggleSuccessShow,\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        onClose: toggleSuccessShow,\n        severity: \"success\",\n        sx: {\n          width: '100%'\n        },\n        children: \"\\u0410\\u0432\\u0442\\u043E\\u0440\\u0438\\u0437\\u0430\\u0446\\u0438\\u044F \\u043F\\u0440\\u043E\\u0448\\u043B\\u0430 \\u0443\\u0441\\u043F\\u0435\\u0448\\u043D\\u043E.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(AuthModal, \"rhfUpW3Q1f2Ex5xFMmy/IcqMJ6A=\", false, function () {\n  return [useNavigate, useDispatch];\n});\n\n_c = AuthModal;\nexport default AuthModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthModal\");","map":{"version":3,"sources":["C:/Users/Кристина/Downloads/Telegram Desktop/psixCentr/main/src/components/AuthModal.tsx"],"names":["React","useState","Box","Modal","Button","TextField","Typography","useNavigate","Snackbar","Alert","RegisterModal","useDispatch","AuthService","sha256","clientActions","style","position","top","left","transform","width","bgcolor","border","boxShadow","p","display","flexDirection","alignItems","AuthModal","props","open","setOpen","regOpen","setRegOpen","handleRegOpen","handleClose","handleOpen","navigate","handlerClose","dispatch","successShow","setSuccessShow","toggleSuccessShow","show","setShow","toggleShow","nullShow","setNullShow","toggleNullShow","values","setValues","email","password","handleChange","prop","event","target","value","trim","logIn","data","login","then","res","type","loginSuccess","mt","mb","mx","justifyContent","mr","ml"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,GAAP,MAAgB,mBAAhB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SAASC,SAAT,EAAoBC,UAApB,QAAsC,eAAtC;AACA,SAAQC,WAAR,QAA0B,kBAA1B;AACA,OAAO,sCAAP;AACA,OAAO,yBAAP;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,SAAQC,WAAR,QAA0B,aAA1B;AAEA,OAAOC,WAAP,MAAwB,+BAAxB;AAEA,OAAOC,MAAP,MAAmB,QAAnB;AACA,SAASC,aAAT,QAA8B,6BAA9B;;;AAOA,MAAMC,KAAK,GAAG;AACVC,EAAAA,QAAQ,EAAE,UADA;AAEVC,EAAAA,GAAG,EAAE,KAFK;AAGVC,EAAAA,IAAI,EAAE,KAHI;AAIVC,EAAAA,SAAS,EAAE,uBAJD;AAKVC,EAAAA,KAAK,EAAE,GALG;AAMVC,EAAAA,OAAO,EAAE,kBANC;AAOVC,EAAAA,MAAM,EAAE,gBAPE;AAQVC,EAAAA,SAAS,EAAE,EARD;AASVC,EAAAA,CAAC,EAAE,CATO;AAUVC,EAAAA,OAAO,EAAC,MAVE;AAWVC,EAAAA,aAAa,EAAC,QAXJ;AAYVC,EAAAA,UAAU,EAAC;AAZD,CAAd;;AAeA,SAASC,SAAT,CAAmBC,KAAnB,EAAoC;AAAA;;AAMhC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkB/B,KAAK,CAACC,QAAN,CAAe,KAAf,CAAxB;AACA,QAAM,CAAC+B,OAAD,EAASC,UAAT,IAAuBjC,KAAK,CAACC,QAAN,CAAe,KAAf,CAA7B;;AACA,QAAMiC,aAAa,GAAG,MAAM;AAAEC,IAAAA,WAAW;AAAIF,IAAAA,UAAU,CAAC,IAAD,CAAV;AAAiB,GAA9D;;AACA,QAAMG,UAAU,GAAG,MAAML,OAAO,CAAC,IAAD,CAAhC;;AACA,QAAMM,QAAQ,GAAG9B,WAAW,EAA5B;;AACA,QAAM4B,WAAW,GAAG,MAAMN,KAAK,CAACS,YAAN,EAA1B;;AACA,QAAMC,QAAQ,GAAG5B,WAAW,EAA5B;AACA,QAAM,CAAC6B,WAAD,EAAaC,cAAb,IAA+BxC,QAAQ,CAAC,KAAD,CAA7C;;AACA,QAAMyC,iBAAiB,GAAG,MAAMD,cAAc,CAAC,CAACD,WAAF,CAA9C;;AACA,QAAM,CAACG,IAAD,EAAOC,OAAP,IAAkB3C,QAAQ,CAAC,KAAD,CAAhC;;AACA,QAAM4C,UAAU,GAAG,MAAMD,OAAO,CAAC,CAACD,IAAF,CAAhC;;AACA,QAAM,CAACG,QAAD,EAAWC,WAAX,IAA0B9C,QAAQ,CAAC,KAAD,CAAxC;;AACA,QAAM+C,cAAc,GAAG,MAAMD,WAAW,CAAC,CAACD,QAAF,CAAxC;;AACI,QAAM,CAACG,MAAD,EAASC,SAAT,IAAsBjD,QAAQ,CAAQ;AACxCkD,IAAAA,KAAK,EAAE,EADiC;AAExCC,IAAAA,QAAQ,EAAE;AAF8B,GAAR,CAApC;;AAKA,QAAMC,YAAY,GAAIC,IAAD,IAAwBC,KAAD,IAAgD;AACxFL,IAAAA,SAAS,CAAC,EAAC,GAAGD,MAAJ;AAAY,OAACK,IAAD,GAAQC,KAAK,CAACC,MAAN,CAAaC,KAAb,CAAmBC,IAAnB;AAApB,KAAD,CAAT;AACH,GAFD;;AAGA,QAAMC,KAAK,GAAG,MAAM;AAChB,UAAMC,IAAgB,GAAG;AACrBT,MAAAA,KAAK,EAAEF,MAAM,CAACE,KADO;AAErBC,MAAAA,QAAQ,EAAEvC,MAAM,CAACoC,MAAM,CAACG,QAAR;AAFK,KAAzB;AAIAxC,IAAAA,WAAW,CAACiD,KAAZ,CAAkBD,IAAlB,EAAwBE,IAAxB,CAA8BC,GAAD,IAAS;AAClCxB,MAAAA,QAAQ,CAACwB,GAAD,CAAR;;AACA,UAAIA,GAAG,CAACC,IAAJ,KAAalD,aAAa,CAACmD,YAAd,CAA2BD,IAA5C,EAAkD;AAE9C7B,QAAAA,WAAW;AACXM,QAAAA,cAAc,CAAC,IAAD,CAAd;AAEH,OALD,MAMK;AAACG,QAAAA,OAAO,CAAC,IAAD,CAAP;AAAc;AACvB,KATD;AAWH,GAhBD;;AAkBJ,sBACI;AAAA,4BACA,QAAC,KAAD;AACN,MAAA,IAAI,EAAEf,KAAK,CAACC,IADN;AAEN,MAAA,OAAO,EAAEK,WAFH;AAGN,yBAAgB,mBAHV;AAIN,0BAAiB,yBAJX;AAAA,6BAMN,QAAC,GAAD;AAAK,QAAA,EAAE,EAAEpB,KAAT;AAAA,gCACA,QAAC,UAAD;AAAY,UAAA,EAAE,EAAC,mBAAf;AAAmC,UAAA,OAAO,EAAC,IAA3C;AAAgD,UAAA,SAAS,EAAC,IAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADA,eAIQ,QAAC,SAAD;AAAW,UAAA,SAAS,MAApB;AAAqB,UAAA,IAAI,EAAC,OAA1B;AAAkC,UAAA,KAAK,EAAC,OAAxC;AAAgD,UAAA,QAAQ,EAAEsC,YAAY,CAAC,OAAD,CAAtE;AAAiF,UAAA,EAAE,EAAE;AACnFa,YAAAA,EAAE,EAAC,CADgF;AAEnFC,YAAAA,EAAE,EAAC;AAFgF;AAArF;AAAA;AAAA;AAAA;AAAA,gBAJR,eAUQ,QAAC,SAAD;AAAW,UAAA,SAAS,MAApB;AAAqB,UAAA,KAAK,EAAC,sCAA3B;AAAoC,UAAA,IAAI,EAAC,UAAzC;AAAoD,UAAA,QAAQ,EAAEd,YAAY,CAAC,UAAD;AAA1E;AAAA;AAAA;AAAA;AAAA,gBAVR,eAaQ,QAAC,GAAD;AAAK,UAAA,EAAE,EAAE;AACPa,YAAAA,EAAE,EAAC,CADI;AAEPE,YAAAA,EAAE,EAAC,MAFI;AAGP3C,YAAAA,OAAO,EAAC,MAHD;AAIP4C,YAAAA,cAAc,EAAC;AAJR,WAAT;AAAA,kCAME,QAAC,MAAD;AAAQ,YAAA,OAAO,EAAC,WAAhB;AAA4B,YAAA,OAAO,EAAEV,KAArC;AAA4C,YAAA,EAAE,EAAE;AAC5CW,cAAAA,EAAE,EAAC;AADyC,aAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBANF,eAWE,QAAC,MAAD;AAAQ,YAAA,OAAO,EAAC,MAAhB;AAAuB,YAAA,EAAE,EAAE;AACvBC,cAAAA,EAAE,EAAC;AADoB,aAA3B;AAEG,YAAA,OAAO,EAAErC,aAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAXF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAbR;AAAA;AAAA;AAAA;AAAA;AAAA;AANM;AAAA;AAAA;AAAA;AAAA,YADA,eAwCR,QAAC,aAAD;AAAe,MAAA,OAAO,EAAEF,OAAxB;AAAiC,MAAA,eAAe,EAAE,MAAMC,UAAU,CAAC,KAAD;AAAlE;AAAA;AAAA;AAAA;AAAA,YAxCQ,eAyCR,QAAC,QAAD;AAAU,MAAA,IAAI,EAAEU,IAAhB;AAAsB,MAAA,gBAAgB,EAAE,IAAxC;AAA8C,MAAA,OAAO,EAAEE,UAAvD;AAAA,6BACQ,QAAC,KAAD;AAAO,QAAA,OAAO,EAAEA,UAAhB;AAA4B,QAAA,QAAQ,EAAC,OAArC;AAA6C,QAAA,EAAE,EAAE;AAAEzB,UAAAA,KAAK,EAAE;AAAT,SAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADR;AAAA;AAAA;AAAA;AAAA,YAzCQ,eA8CF,QAAC,QAAD;AAAU,MAAA,IAAI,EAAEoB,WAAhB;AAA6B,MAAA,gBAAgB,EAAE,IAA/C;AAAqD,MAAA,OAAO,EAAEE,iBAA9D;AAAA,6BACE,QAAC,KAAD;AAAO,QAAA,OAAO,EAAEA,iBAAhB;AAAmC,QAAA,QAAQ,EAAC,SAA5C;AAAsD,QAAA,EAAE,EAAE;AAAEtB,UAAAA,KAAK,EAAE;AAAT,SAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YA9CE;AAAA,kBADJ;AAqDH;;GAlGQQ,S;UAUYrB,W,EAEAI,W;;;KAZZiB,S;AAsGT,eAAeA,SAAf","sourcesContent":["import React, {useState} from \"react\";\r\nimport Box from '@mui/material/Box';\r\nimport Modal from '@mui/material/Modal';\r\nimport Button from '@mui/material/Button';\r\nimport { TextField, Typography } from '@mui/material';\r\nimport {useNavigate} from 'react-router-dom';\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"../assets/css/index.css\";\r\nimport Snackbar from '@mui/material/Snackbar';\r\nimport Alert from '@mui/material/Alert'; \r\nimport RegisterModal from './RegisterModal';\r\nimport {useDispatch} from \"react-redux\";\r\nimport {AppDispatch} from \"../redux/store\"\r\nimport AuthService from \"../redux/services/AuthService\"\r\nimport {LoginModel} from '../models/RequestModel';\r\nimport sha256 from \"sha256\";\r\nimport { clientActions } from \"../redux/slices/clientslice\";\r\n\r\ninterface AuthProps {\r\n\topen: boolean,\r\n\thandlerClose: () => void\r\n}\r\n\r\nconst style = {\r\n    position: 'absolute' as 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    width: 400,\r\n    bgcolor: 'background.paper',\r\n    border: '2px solid #000',\r\n    boxShadow: 24,\r\n    p: 4,\r\n    display:\"flex\",\r\n    flexDirection:\"column\",\r\n    alignItems:\"center\"\r\n  };\r\n\r\nfunction AuthModal(props: AuthProps){\r\n\r\n    interface State {\r\n        email: string,\r\n        password: string\r\n    }\r\n    const [open, setOpen] = React.useState(false);\r\n    const [regOpen,setRegOpen] = React.useState(false);\r\n    const handleRegOpen = () => { handleClose(); setRegOpen(true)}\r\n    const handleOpen = () => setOpen(true);\r\n    const navigate = useNavigate();\r\n    const handleClose = () => props.handlerClose();\r\n    const dispatch = useDispatch<AppDispatch>();\r\n    const [successShow,setSuccessShow] = useState(false);\r\n    const toggleSuccessShow = () => setSuccessShow(!successShow)\r\n    const [show, setShow] = useState(false);\r\n    const toggleShow = () => setShow(!show);\r\n    const [nullShow, setNullShow] = useState(false);\r\n    const toggleNullShow = () => setNullShow(!nullShow);\r\n        const [values, setValues] = useState<State>({\r\n            email: '',\r\n            password: ''\r\n        });\r\n    \r\n        const handleChange = (prop: keyof State) => (event: React.ChangeEvent<HTMLInputElement>) => {\r\n            setValues({...values, [prop]: event.target.value.trim()});\r\n        };\r\n        const logIn = () => {\r\n            const data: LoginModel = {\r\n                email: values.email,\r\n                password: sha256(values.password)\r\n            };\r\n            AuthService.login(data).then((res) => {\r\n                dispatch(res)\r\n                if (res.type === clientActions.loginSuccess.type) {\r\n\r\n                    handleClose();\r\n                    setSuccessShow(true);\r\n\r\n                }\r\n                else {setShow(true)}\r\n            })\r\n\r\n        }\r\n\r\n    return(\r\n        <>\r\n        <Modal\r\n  open={props.open}\r\n  onClose={handleClose}\r\n  aria-labelledby=\"modal-modal-title\"\r\n  aria-describedby=\"modal-modal-description\"\r\n>\r\n  <Box sx={style}>\r\n  <Typography id=\"modal-modal-title\" variant=\"h6\" component=\"h2\" >\r\n            Авторизация\r\n          </Typography>\r\n          <TextField fullWidth type=\"email\" label=\"Email\" onChange={handleChange(\"email\")} sx={{\r\n            mt:2,\r\n            mb:2\r\n            }}>\r\n\r\n          </TextField>\r\n          <TextField fullWidth label=\"Пароль\" type=\"password\" onChange={handleChange(\"password\")}>\r\n\r\n          </TextField>\r\n          <Box sx={{\r\n            mt:2,\r\n            mx:\"auto\",\r\n            display:\"flex\",\r\n            justifyContent:\"space-between\"\r\n          }}>\r\n            <Button variant=\"contained\" onClick={logIn} sx={{\r\n                mr:8\r\n            }}>\r\n                Войти\r\n            </Button>\r\n            <Button variant=\"text\" sx={{\r\n                ml:8\r\n            }} onClick={handleRegOpen}>\r\n                Регистрация\r\n            </Button>\r\n          </Box>\r\n          \r\n  </Box>\r\n</Modal>\r\n<RegisterModal regOpen={regOpen} regHandlerClose={() => setRegOpen(false)}/>\r\n<Snackbar open={show} autoHideDuration={5000} onClose={toggleShow}>\r\n        <Alert onClose={toggleShow} severity=\"error\" sx={{ width: '100%' }}>\r\n          Неверный логин или пароль!\r\n        </Alert>\r\n      </Snackbar>\r\n      <Snackbar open={successShow} autoHideDuration={5000} onClose={toggleSuccessShow}>\r\n        <Alert onClose={toggleSuccessShow} severity=\"success\" sx={{ width: '100%' }}>\r\n          Авторизация прошла успешно.\r\n        </Alert>\r\n      </Snackbar>\r\n  </>)\r\n}\r\n\r\n\r\n\r\nexport default AuthModal;"]},"metadata":{},"sourceType":"module"}