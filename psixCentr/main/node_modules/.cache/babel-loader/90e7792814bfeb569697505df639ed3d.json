{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"calendars\", \"changeMonth\", \"components\", \"componentsProps\", \"currentlySelectingRangeEnd\", \"currentMonth\", \"parsedValue\", \"disableFuture\", \"disablePast\", \"leftArrowButtonText\", \"maxDate\", \"minDate\", \"onSelectedDaysChange\", \"renderDay\", \"rightArrowButtonText\", \"className\", \"classes\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { styled, useThemeProps } from '@mui/material/styles';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport { useDefaultDates, useUtils, useLocaleText, PickersArrowSwitcher, usePreviousMonthDisabled, useNextMonthDisabled, DayPicker, buildDeprecatedPropsWarning, DAY_MARGIN } from '@mui/x-date-pickers/internals';\nimport { calculateRangePreview } from './date-range-manager';\nimport { DateRangePickerDay } from '../DateRangePickerDay';\nimport { isWithinRange, isStartOfRange, isEndOfRange } from '../internal/utils/date-utils';\nimport { doNothing } from '../internal/utils/utils';\nimport { getDateRangePickerViewDesktopUtilityClass } from './dateRangePickerViewDesktopClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { createElement as _createElement } from \"react\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    container: ['container']\n  };\n  return composeClasses(slots, getDateRangePickerViewDesktopUtilityClass, classes);\n};\n\nconst DateRangePickerViewDesktopRoot = styled('div', {\n  name: 'MuiDateRangePickerViewDesktop',\n  slot: 'Root',\n  overridesResolver: (_, styles) => styles.root\n})({\n  display: 'flex',\n  flexDirection: 'row'\n});\nconst DateRangePickerViewDesktopContainer = styled('div', {\n  name: 'MuiDateRangePickerViewDesktop',\n  slot: 'Container',\n  overridesResolver: (_, styles) => styles.container\n})(_ref => {\n  let {\n    theme\n  } = _ref;\n  return {\n    '&:not(:last-of-type)': {\n      borderRight: `2px solid ${theme.palette.divider}`\n    }\n  };\n});\nconst DAY_RANGE_SIZE = 40;\nconst weeksContainerHeight = (DAY_RANGE_SIZE + DAY_MARGIN * 2) * 6;\nconst DateRangePickerViewDesktopCalendar = styled(DayPicker)({\n  minWidth: 312,\n  minHeight: weeksContainerHeight\n});\nconst DateRangePickerViewDesktopArrowSwitcher = styled(PickersArrowSwitcher)({\n  padding: '16px 16px 8px 16px',\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'space-between'\n});\n\nfunction getCalendarsArray(calendars) {\n  switch (calendars) {\n    case 1:\n      return [0];\n\n    case 2:\n      return [0, 0];\n\n    case 3:\n      return [0, 0, 0];\n    // this will not work in IE11, but allows to support any amount of calendars\n\n    default:\n      return new Array(calendars).fill(0);\n  }\n}\n\nconst deprecatedPropsWarning = buildDeprecatedPropsWarning('Props for translation are deprecated. See https://mui.com/x/react-date-pickers/localization for more information.');\n/**\n * @ignore - internal component.\n */\n\nexport function DateRangePickerViewDesktop(inProps) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiDateRangePickerViewDesktop'\n  });\n\n  const {\n    calendars,\n    changeMonth,\n    components,\n    componentsProps,\n    currentlySelectingRangeEnd,\n    currentMonth,\n    parsedValue,\n    disableFuture,\n    disablePast,\n    leftArrowButtonText: leftArrowButtonTextProp,\n    maxDate: maxDateProp,\n    minDate: minDateProp,\n    onSelectedDaysChange,\n    renderDay = (_, dateRangeProps) => /*#__PURE__*/_jsx(DateRangePickerDay, _extends({}, dateRangeProps)),\n    rightArrowButtonText: rightArrowButtonTextProp,\n    className\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  deprecatedPropsWarning({\n    leftArrowButtonText: leftArrowButtonTextProp,\n    rightArrowButtonText: rightArrowButtonTextProp\n  });\n  const localeText = useLocaleText();\n  const leftArrowButtonText = leftArrowButtonTextProp != null ? leftArrowButtonTextProp : localeText.previousMonth;\n  const rightArrowButtonText = rightArrowButtonTextProp != null ? rightArrowButtonTextProp : localeText.nextMonth;\n  const utils = useUtils();\n  const classes = useUtilityClasses(props);\n  const defaultDates = useDefaultDates();\n  const minDate = minDateProp != null ? minDateProp : defaultDates.minDate;\n  const maxDate = maxDateProp != null ? maxDateProp : defaultDates.maxDate;\n  const [rangePreviewDay, setRangePreviewDay] = React.useState(null);\n  const isNextMonthDisabled = useNextMonthDisabled(currentMonth, {\n    disableFuture,\n    maxDate\n  });\n  const isPreviousMonthDisabled = usePreviousMonthDisabled(currentMonth, {\n    disablePast,\n    minDate\n  });\n  const previewingRange = calculateRangePreview({\n    utils,\n    range: parsedValue,\n    newDate: rangePreviewDay,\n    currentlySelectingRangeEnd\n  });\n  const handleSelectedDayChange = React.useCallback(day => {\n    setRangePreviewDay(null);\n    onSelectedDaysChange(day);\n  }, [onSelectedDaysChange]);\n\n  const handlePreviewDayChange = newPreviewRequest => {\n    if (!isWithinRange(utils, newPreviewRequest, parsedValue)) {\n      setRangePreviewDay(newPreviewRequest);\n    } else {\n      setRangePreviewDay(null);\n    }\n  };\n\n  const CalendarTransitionProps = React.useMemo(() => ({\n    onMouseLeave: () => setRangePreviewDay(null)\n  }), []);\n  const selectNextMonth = React.useCallback(() => {\n    changeMonth(utils.getNextMonth(currentMonth));\n  }, [changeMonth, currentMonth, utils]);\n  const selectPreviousMonth = React.useCallback(() => {\n    changeMonth(utils.getPreviousMonth(currentMonth));\n  }, [changeMonth, currentMonth, utils]);\n  return /*#__PURE__*/_jsx(DateRangePickerViewDesktopRoot, {\n    className: clsx(className, classes.root),\n    children: getCalendarsArray(calendars).map((_, index) => {\n      const monthOnIteration = utils.setMonth(currentMonth, utils.getMonth(currentMonth) + index);\n      return /*#__PURE__*/_jsxs(DateRangePickerViewDesktopContainer, {\n        className: classes.container,\n        children: [/*#__PURE__*/_jsx(DateRangePickerViewDesktopArrowSwitcher, {\n          onLeftClick: selectPreviousMonth,\n          onRightClick: selectNextMonth,\n          isLeftHidden: index !== 0,\n          isRightHidden: index !== calendars - 1,\n          isLeftDisabled: isPreviousMonthDisabled,\n          isRightDisabled: isNextMonthDisabled,\n          leftArrowButtonText: leftArrowButtonText,\n          components: components,\n          componentsProps: componentsProps,\n          rightArrowButtonText: rightArrowButtonText,\n          children: utils.format(monthOnIteration, 'monthAndYear')\n        }), /*#__PURE__*/_createElement(DateRangePickerViewDesktopCalendar, _extends({}, other, {\n          minDate: minDate,\n          maxDate: maxDate,\n          disablePast: disablePast,\n          disableFuture: disableFuture,\n          key: index,\n          selectedDays: parsedValue,\n          onFocusedDayChange: doNothing,\n          onSelectedDaysChange: handleSelectedDayChange,\n          currentMonth: monthOnIteration,\n          TransitionProps: CalendarTransitionProps,\n          renderDay: (day, __, DayProps) => renderDay(day, _extends({\n            isPreviewing: isWithinRange(utils, day, previewingRange),\n            isStartOfPreviewing: isStartOfRange(utils, day, previewingRange),\n            isEndOfPreviewing: isEndOfRange(utils, day, previewingRange),\n            isHighlighting: isWithinRange(utils, day, parsedValue),\n            isStartOfHighlighting: isStartOfRange(utils, day, parsedValue),\n            isEndOfHighlighting: isEndOfRange(utils, day, parsedValue),\n            onMouseEnter: () => handlePreviewDayChange(day)\n          }, DayProps))\n        }))]\n      }, index);\n    })\n  });\n}","map":{"version":3,"sources":["C:/Users/Кристина/Downloads/Telegram Desktop/psixCentr/main/node_modules/@mui/x-date-pickers-pro/DateRangePicker/DateRangePickerViewDesktop.js"],"names":["_extends","_objectWithoutPropertiesLoose","_excluded","React","clsx","styled","useThemeProps","unstable_composeClasses","composeClasses","useDefaultDates","useUtils","useLocaleText","PickersArrowSwitcher","usePreviousMonthDisabled","useNextMonthDisabled","DayPicker","buildDeprecatedPropsWarning","DAY_MARGIN","calculateRangePreview","DateRangePickerDay","isWithinRange","isStartOfRange","isEndOfRange","doNothing","getDateRangePickerViewDesktopUtilityClass","jsx","_jsx","createElement","_createElement","jsxs","_jsxs","useUtilityClasses","ownerState","classes","slots","root","container","DateRangePickerViewDesktopRoot","name","slot","overridesResolver","_","styles","display","flexDirection","DateRangePickerViewDesktopContainer","theme","borderRight","palette","divider","DAY_RANGE_SIZE","weeksContainerHeight","DateRangePickerViewDesktopCalendar","minWidth","minHeight","DateRangePickerViewDesktopArrowSwitcher","padding","alignItems","justifyContent","getCalendarsArray","calendars","Array","fill","deprecatedPropsWarning","DateRangePickerViewDesktop","inProps","props","changeMonth","components","componentsProps","currentlySelectingRangeEnd","currentMonth","parsedValue","disableFuture","disablePast","leftArrowButtonText","leftArrowButtonTextProp","maxDate","maxDateProp","minDate","minDateProp","onSelectedDaysChange","renderDay","dateRangeProps","rightArrowButtonText","rightArrowButtonTextProp","className","other","localeText","previousMonth","nextMonth","utils","defaultDates","rangePreviewDay","setRangePreviewDay","useState","isNextMonthDisabled","isPreviousMonthDisabled","previewingRange","range","newDate","handleSelectedDayChange","useCallback","day","handlePreviewDayChange","newPreviewRequest","CalendarTransitionProps","useMemo","onMouseLeave","selectNextMonth","getNextMonth","selectPreviousMonth","getPreviousMonth","children","map","index","monthOnIteration","setMonth","getMonth","onLeftClick","onRightClick","isLeftHidden","isRightHidden","isLeftDisabled","isRightDisabled","format","key","selectedDays","onFocusedDayChange","TransitionProps","__","DayProps","isPreviewing","isStartOfPreviewing","isEndOfPreviewing","isHighlighting","isStartOfHighlighting","isEndOfHighlighting","onMouseEnter"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"calendars\", \"changeMonth\", \"components\", \"componentsProps\", \"currentlySelectingRangeEnd\", \"currentMonth\", \"parsedValue\", \"disableFuture\", \"disablePast\", \"leftArrowButtonText\", \"maxDate\", \"minDate\", \"onSelectedDaysChange\", \"renderDay\", \"rightArrowButtonText\", \"className\", \"classes\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { styled, useThemeProps } from '@mui/material/styles';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport { useDefaultDates, useUtils, useLocaleText, PickersArrowSwitcher, usePreviousMonthDisabled, useNextMonthDisabled, DayPicker, buildDeprecatedPropsWarning, DAY_MARGIN } from '@mui/x-date-pickers/internals';\nimport { calculateRangePreview } from './date-range-manager';\nimport { DateRangePickerDay } from '../DateRangePickerDay';\nimport { isWithinRange, isStartOfRange, isEndOfRange } from '../internal/utils/date-utils';\nimport { doNothing } from '../internal/utils/utils';\nimport { getDateRangePickerViewDesktopUtilityClass } from './dateRangePickerViewDesktopClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { createElement as _createElement } from \"react\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    container: ['container']\n  };\n  return composeClasses(slots, getDateRangePickerViewDesktopUtilityClass, classes);\n};\n\nconst DateRangePickerViewDesktopRoot = styled('div', {\n  name: 'MuiDateRangePickerViewDesktop',\n  slot: 'Root',\n  overridesResolver: (_, styles) => styles.root\n})({\n  display: 'flex',\n  flexDirection: 'row'\n});\nconst DateRangePickerViewDesktopContainer = styled('div', {\n  name: 'MuiDateRangePickerViewDesktop',\n  slot: 'Container',\n  overridesResolver: (_, styles) => styles.container\n})(({\n  theme\n}) => ({\n  '&:not(:last-of-type)': {\n    borderRight: `2px solid ${theme.palette.divider}`\n  }\n}));\nconst DAY_RANGE_SIZE = 40;\nconst weeksContainerHeight = (DAY_RANGE_SIZE + DAY_MARGIN * 2) * 6;\nconst DateRangePickerViewDesktopCalendar = styled(DayPicker)({\n  minWidth: 312,\n  minHeight: weeksContainerHeight\n});\nconst DateRangePickerViewDesktopArrowSwitcher = styled(PickersArrowSwitcher)({\n  padding: '16px 16px 8px 16px',\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'space-between'\n});\n\nfunction getCalendarsArray(calendars) {\n  switch (calendars) {\n    case 1:\n      return [0];\n\n    case 2:\n      return [0, 0];\n\n    case 3:\n      return [0, 0, 0];\n    // this will not work in IE11, but allows to support any amount of calendars\n\n    default:\n      return new Array(calendars).fill(0);\n  }\n}\n\nconst deprecatedPropsWarning = buildDeprecatedPropsWarning('Props for translation are deprecated. See https://mui.com/x/react-date-pickers/localization for more information.');\n/**\n * @ignore - internal component.\n */\n\nexport function DateRangePickerViewDesktop(inProps) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiDateRangePickerViewDesktop'\n  });\n\n  const {\n    calendars,\n    changeMonth,\n    components,\n    componentsProps,\n    currentlySelectingRangeEnd,\n    currentMonth,\n    parsedValue,\n    disableFuture,\n    disablePast,\n    leftArrowButtonText: leftArrowButtonTextProp,\n    maxDate: maxDateProp,\n    minDate: minDateProp,\n    onSelectedDaysChange,\n    renderDay = (_, dateRangeProps) => /*#__PURE__*/_jsx(DateRangePickerDay, _extends({}, dateRangeProps)),\n    rightArrowButtonText: rightArrowButtonTextProp,\n    className\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  deprecatedPropsWarning({\n    leftArrowButtonText: leftArrowButtonTextProp,\n    rightArrowButtonText: rightArrowButtonTextProp\n  });\n  const localeText = useLocaleText();\n  const leftArrowButtonText = leftArrowButtonTextProp != null ? leftArrowButtonTextProp : localeText.previousMonth;\n  const rightArrowButtonText = rightArrowButtonTextProp != null ? rightArrowButtonTextProp : localeText.nextMonth;\n  const utils = useUtils();\n  const classes = useUtilityClasses(props);\n  const defaultDates = useDefaultDates();\n  const minDate = minDateProp != null ? minDateProp : defaultDates.minDate;\n  const maxDate = maxDateProp != null ? maxDateProp : defaultDates.maxDate;\n  const [rangePreviewDay, setRangePreviewDay] = React.useState(null);\n  const isNextMonthDisabled = useNextMonthDisabled(currentMonth, {\n    disableFuture,\n    maxDate\n  });\n  const isPreviousMonthDisabled = usePreviousMonthDisabled(currentMonth, {\n    disablePast,\n    minDate\n  });\n  const previewingRange = calculateRangePreview({\n    utils,\n    range: parsedValue,\n    newDate: rangePreviewDay,\n    currentlySelectingRangeEnd\n  });\n  const handleSelectedDayChange = React.useCallback(day => {\n    setRangePreviewDay(null);\n    onSelectedDaysChange(day);\n  }, [onSelectedDaysChange]);\n\n  const handlePreviewDayChange = newPreviewRequest => {\n    if (!isWithinRange(utils, newPreviewRequest, parsedValue)) {\n      setRangePreviewDay(newPreviewRequest);\n    } else {\n      setRangePreviewDay(null);\n    }\n  };\n\n  const CalendarTransitionProps = React.useMemo(() => ({\n    onMouseLeave: () => setRangePreviewDay(null)\n  }), []);\n  const selectNextMonth = React.useCallback(() => {\n    changeMonth(utils.getNextMonth(currentMonth));\n  }, [changeMonth, currentMonth, utils]);\n  const selectPreviousMonth = React.useCallback(() => {\n    changeMonth(utils.getPreviousMonth(currentMonth));\n  }, [changeMonth, currentMonth, utils]);\n  return /*#__PURE__*/_jsx(DateRangePickerViewDesktopRoot, {\n    className: clsx(className, classes.root),\n    children: getCalendarsArray(calendars).map((_, index) => {\n      const monthOnIteration = utils.setMonth(currentMonth, utils.getMonth(currentMonth) + index);\n      return /*#__PURE__*/_jsxs(DateRangePickerViewDesktopContainer, {\n        className: classes.container,\n        children: [/*#__PURE__*/_jsx(DateRangePickerViewDesktopArrowSwitcher, {\n          onLeftClick: selectPreviousMonth,\n          onRightClick: selectNextMonth,\n          isLeftHidden: index !== 0,\n          isRightHidden: index !== calendars - 1,\n          isLeftDisabled: isPreviousMonthDisabled,\n          isRightDisabled: isNextMonthDisabled,\n          leftArrowButtonText: leftArrowButtonText,\n          components: components,\n          componentsProps: componentsProps,\n          rightArrowButtonText: rightArrowButtonText,\n          children: utils.format(monthOnIteration, 'monthAndYear')\n        }), /*#__PURE__*/_createElement(DateRangePickerViewDesktopCalendar, _extends({}, other, {\n          minDate: minDate,\n          maxDate: maxDate,\n          disablePast: disablePast,\n          disableFuture: disableFuture,\n          key: index,\n          selectedDays: parsedValue,\n          onFocusedDayChange: doNothing,\n          onSelectedDaysChange: handleSelectedDayChange,\n          currentMonth: monthOnIteration,\n          TransitionProps: CalendarTransitionProps,\n          renderDay: (day, __, DayProps) => renderDay(day, _extends({\n            isPreviewing: isWithinRange(utils, day, previewingRange),\n            isStartOfPreviewing: isStartOfRange(utils, day, previewingRange),\n            isEndOfPreviewing: isEndOfRange(utils, day, previewingRange),\n            isHighlighting: isWithinRange(utils, day, parsedValue),\n            isStartOfHighlighting: isStartOfRange(utils, day, parsedValue),\n            isEndOfHighlighting: isEndOfRange(utils, day, parsedValue),\n            onMouseEnter: () => handlePreviewDayChange(day)\n          }, DayProps))\n        }))]\n      }, index);\n    })\n  });\n}"]},"metadata":{},"sourceType":"module"}