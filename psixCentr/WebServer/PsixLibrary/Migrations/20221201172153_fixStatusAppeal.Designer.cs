// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using PsixLibrary;

#nullable disable

namespace CinemaLibrary.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20221201172153_fixStatusAppeal")]
    partial class fixStatusAppeal
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("PsixLibrary.Entity.Answer", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ID"));

                    b.Property<string>("AnswerText")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("AppealID")
                        .HasColumnType("integer");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("PsychologistID")
                        .HasColumnType("integer");

                    b.HasKey("ID");

                    b.HasIndex("AppealID");

                    b.HasIndex("PsychologistID");

                    b.ToTable("Answer");
                });

            modelBuilder.Entity("PsixLibrary.Entity.Appeal", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ID"));

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsAnswered")
                        .HasColumnType("boolean");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("TypeAppealID")
                        .HasColumnType("integer");

                    b.Property<int>("UserID")
                        .HasColumnType("integer");

                    b.HasKey("ID");

                    b.HasIndex("TypeAppealID");

                    b.HasIndex("UserID");

                    b.ToTable("Appeal");
                });

            modelBuilder.Entity("PsixLibrary.Entity.Psychologist", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ID"));

                    b.Property<string>("MiddleName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("UserID")
                        .HasColumnType("integer");

                    b.HasKey("ID");

                    b.HasIndex("UserID");

                    b.ToTable("Psychologist");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            MiddleName = "Леонидович",
                            Name = "Сергей",
                            Surname = "Кукушкин",
                            UserID = 1
                        },
                        new
                        {
                            ID = 2,
                            MiddleName = "Генадьевич",
                            Name = "Василий",
                            Surname = "Безумов",
                            UserID = 2
                        });
                });

            modelBuilder.Entity("PsixLibrary.Entity.RefreshToken", b =>
                {
                    b.Property<string>("Token")
                        .HasColumnType("text");

                    b.Property<int?>("UserID")
                        .HasColumnType("integer");

                    b.HasKey("Token");

                    b.HasIndex("UserID");

                    b.ToTable("RefreshTokens");
                });

            modelBuilder.Entity("PsixLibrary.Entity.TypeAppeal", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ID"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("TypeName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.ToTable("TypeAppeal");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Description = "Описание типа 1",
                            TypeName = "Тип1"
                        },
                        new
                        {
                            ID = 2,
                            Description = "Описание типа 2",
                            TypeName = "Тип2"
                        });
                });

            modelBuilder.Entity("PsixLibrary.Entity.User", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ID"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsPsychologist")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Pass")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Email = "psihologist1@mail.ru",
                            IsPsychologist = true,
                            Name = "Сергей",
                            Pass = "a665a45920422f9d417e4867efdc4fb8a04a1f3fff1fa07e998e86f7f7a27ae3",
                            Surname = "Кукушкин"
                        },
                        new
                        {
                            ID = 2,
                            Email = "psihologist2@mail.ru",
                            IsPsychologist = true,
                            Name = "Василий",
                            Pass = "a665a45920422f9d417e4867efdc4fb8a04a1f3fff1fa07e998e86f7f7a27ae3",
                            Surname = "Безумов"
                        });
                });

            modelBuilder.Entity("PsixLibrary.Entity.Answer", b =>
                {
                    b.HasOne("PsixLibrary.Entity.Appeal", "Appeal")
                        .WithMany()
                        .HasForeignKey("AppealID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PsixLibrary.Entity.Psychologist", "Psychologist")
                        .WithMany("AnswerList")
                        .HasForeignKey("PsychologistID");

                    b.Navigation("Appeal");

                    b.Navigation("Psychologist");
                });

            modelBuilder.Entity("PsixLibrary.Entity.Appeal", b =>
                {
                    b.HasOne("PsixLibrary.Entity.TypeAppeal", "TypeAppeal")
                        .WithMany()
                        .HasForeignKey("TypeAppealID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PsixLibrary.Entity.User", "User")
                        .WithMany("AppealList")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TypeAppeal");

                    b.Navigation("User");
                });

            modelBuilder.Entity("PsixLibrary.Entity.Psychologist", b =>
                {
                    b.HasOne("PsixLibrary.Entity.User", "User")
                        .WithMany()
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("PsixLibrary.Entity.RefreshToken", b =>
                {
                    b.HasOne("PsixLibrary.Entity.User", "User")
                        .WithMany()
                        .HasForeignKey("UserID");

                    b.Navigation("User");
                });

            modelBuilder.Entity("PsixLibrary.Entity.Psychologist", b =>
                {
                    b.Navigation("AnswerList");
                });

            modelBuilder.Entity("PsixLibrary.Entity.User", b =>
                {
                    b.Navigation("AppealList");
                });
#pragma warning restore 612, 618
        }
    }
}
